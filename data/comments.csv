Id,PostId,Score,Text,CreationDate,UserDisplayName,UserId,ContentLicense
"105375001","59603086","0","The question is answered in [Is is valid to construct std::set of pointer type?](https://stackoverflow.com/questions/53927571/is-is-valid-to-construct-stdset-of-pointer-type)","2020-01-06 00:45:07","","9585016","CC BY-SA 4.0"
"105401207","59618213","1","Obvious idea (don't know if it works): write a proc macro that generates a declarative one, then calls it?","2020-01-06 20:59:54","","3650362","CC BY-SA 4.0"
"105620012","59724711","0","@LanguageLawyer: How would that be relevant? The question is “Is there an X that is not a Y?”, not “Is there an X that is a Y?”","2020-01-14 14:21:09","","298225","CC BY-SA 4.0"
"105637191","59724711","0","@LanguageLawyer: The fact that `void *` is complete shows that a pointer to an incomplete type can be complete. It does not show whether or not a pointer to an incomplete type can be incomplete. If one asked “Can a mammal be an elephant?”, showing that “A lion is a mammal” would not provide that a mammal cannot be an elephant. The question asks whether the set X of pointers to incomplete type may contain an element that is incomplete. Showing that the set X of pointers to incomplete type contains an element that is complete is irrelevant.","2020-01-15 03:07:22","","298225","CC BY-SA 4.0"
"105637499","59724711","0","@EricPostpischil Oops. I've misread the title as ""Can a pointer to an incomplete type be **complete**?""","2020-01-15 03:36:09","","9585016","CC BY-SA 4.0"
"105872050","59869486","1","@Naman Related, but that appears to be the reverse of what Basil is doing in this Q&A.","2020-01-23 01:44:39","","6395627","CC BY-SA 4.0"
"105881021","59869486","3","Another way to get an Iterable would just be to collect to a List.","2020-01-23 09:44:28","","2067492","CC BY-SA 4.0"
"106276889","60079472","0","@greeble31 I tried now. Which solution there do you see working? For some reason I still don't get it to work. I set the alarm, I remove the app from recent tasks, and I don't see the alarm being triggered, even though the screen is turned on and the device is connected to a charger. It happens on both a real device (Pixel 4 with Android 10) and on emulator (API 27 for example). Does it work for you? Can you please share the full code? Maybe in Github?","2020-02-06 08:16:50","","878126","CC BY-SA 4.0"
"106287009","60079472","0","@androiddeveloper [This answer](https://stackoverflow.com/a/47371829/6759241) refers to the actual code Google uses in their Alarm Clock app, I don't know if you're going to get any better than that.","2020-02-06 13:23:55","","6759241","CC BY-SA 4.0"
"106346803","60114639","4","I can't believe this question has been closed. Many times SO fails as the engine to help.","2020-02-08 15:51:17","","811785","CC BY-SA 4.0"
"106346857","60114639","4","Facing the exactly same issue. All of our automated Selenium code is broken. And we can't downgrade because of a lot of complexities.","2020-02-08 15:54:57","","811785","CC BY-SA 4.0"
"106421638","60150749","0","Can we have a full example so we know what we're dealing with?","2020-02-11 12:43:51","","10795151","CC BY-SA 4.0"
"106430348","60150749","0","@Someprogrammerdude `-Werror` is usually a bad idea unless done very selectively. It’s OK enough to turn it on during development/CI, but never turn it on by default in a build. You’ll just make it a pain in the ass to use your project for everyone using slightly different setups where you might get warnings the devs didn’t see.","2020-02-11 16:40:40","","938694","CC BY-SA 4.0"
"106440556","60150749","0","@Cubic Those build issues should then be reported to the developers in a perfect world.","2020-02-11 23:32:09","","10795151","CC BY-SA 4.0"
"106857758","60079472","0","@BladeCoder I already made a similar test, by using an easier method: use the framework ""getNextAlarmClock()"" function to get when is the nearest alarm to be triggered: https://issuetracker.google.com/issues/150080941 (has sample too) . And indeed it gets reset. But somehow, as I wrote, some apps overcome this and it doesn't matter for them if I remove from recent tasks. That's why I asked this question. Why does it get reset (even on emulator and Pixel device) and how can I overcome it?","2020-02-26 00:28:15","","878126","CC BY-SA 4.0"
"106904623","60286204","0","Seems like a little old bug. Check https://stackoverflow.com/q/35519511/7183675, https://stackoverflow.com/q/25600332/7183675 and https://stackoverflow.com/q/25064937/7183675","2020-02-27 10:22:15","","7183675","CC BY-SA 4.0"
"107482959","60565299","0","That's clear. Thanks. That library can be made to accept InputStream but the issues will remain. Even Apktool which, I believe, is the gold standard of this type of application has issues and recent ones.","2020-03-19 01:13:02","","6287910","CC BY-SA 4.0"
"107563264","60565299","0","I see two issues: 1) Getting a reliable unzipping methodology for input streams (but that's not the question) and 2) adapting an open source APK unpacker to run on Android. All the unpackers I have looked at work with input streams anyway due to the nature of APKs so they could be adapted. Unfortunately, the simple ones aren't robust and the robust ones do many other things and are involved. It's doable, IMO, but it will be a job. If you are looking to extract just a few manifest entries, though, that would be more aproachable.","2020-03-22 04:16:04","","6287910","CC BY-SA 4.0"
"108120970","61114929","0","@MilesBudnek Hmm.. I guess this question is then equivalent to ""how to detect existence of an enum"".  Unfortunately the solution in [How to detect existence of a class](https://stackoverflow.com/questions/10711952/how-to-detect-existence-of-a-class-using-sfinae) only works for classes, not enums","2020-04-09 07:23:37","","1505939","CC BY-SA 4.0"
"108195743","61151278","0","@LorenPechtel its helpful with logging to have some context attributes/variables around the logs. thats where not using the result is helpful.","2020-04-11 15:41:53","","23528","CC BY-SA 4.0"
"108227259","61177302","0","@Marshall would approve of this question.","2020-04-12 20:15:29","","2069064","CC BY-SA 4.0"
"108246839","61177302","0","@cpplearner: That at least somewhat makes sense, as assignment is a property that proxy references and values are expected to share.","2020-04-13 13:32:31","","734069","CC BY-SA 4.0"
"108395590","60583049","0","@Brad I added a full answer in why this is not possible with the current state of browsers","2020-04-17 13:40:46","","4734657","CC BY-SA 4.0"
"108406156","61278180","0","I don't see how from https://eel.is/c++draft/lex.fcon and https://eel.is/c++draft/lex.ext `f.T` can be considered as udl.","2020-04-17 19:06:34","","2684539","CC BY-SA 4.0"
"108406985","61278180","0","Msvc accepts the code [Demo](https://godbolt.org/z/S_5jur). Surprising if only msvc is right...","2020-04-17 19:34:47","","2684539","CC BY-SA 4.0"
"108616243","61398801","1","If they don't yet, I imagine they will soon.","2020-04-23 23:57:31","","636009","CC BY-SA 4.0"
"108831597","61521819","0","Isn’t there a performance counter for SMIs?","2020-04-30 13:19:05","","8422330","CC BY-SA 4.0"
"108831689","61521819","0","@prl: yes, I think so.  If I actually wrote a bootloader that programmed the perf counters, and collected + printed them after a test run, and then rebooted my desktop to run it, I could find out an answer for my own desktop.  Obviously can't use `perf` because Linux isn't booted yet.  [Evaluating SMI (System Management Interrupt) latency on Linux-CentOS/Intel machine](https://stackoverflow.com/a/57961772) has some details on how you can count SMIs.","2020-04-30 13:21:35","","224132","CC BY-SA 4.0"
"108831946","61521819","1","@prl: actually it's easier to count SMIs: apparently there's an MSR, not a perf counter, so just RDMSR for `MSR_SMI_COUNT=0x34` without having to program a counter first.","2020-04-30 13:28:55","","224132","CC BY-SA 4.0"
"108831957","61521819","0","That’s much easier than my other idea, which is to use the techniques described in section 34.15 to detect SMIs.","2020-04-30 13:29:12","","8422330","CC BY-SA 4.0"
"108844251","61531317","0","Since there are so many questions on the JavaFX tag about loading resources, I posted this Q & A as a community wiki. Please edit either the question or answer if you feel they can be improved.","2020-04-30 19:33:25","","2189127","CC BY-SA 4.0"
"108849299","61521819","0","Despite the patent you found I don't see SMM emulation of VGA being practical for anything other than onboard video, and even that it's dubious.  Nvidia, AMD, and Intel (and others) all have working VGA implementations, both on the silicon and option ROM side, that they just need to cut and paste into new implementations. Implementing SMM emulation would be much more expensive and not really get them anything.","2020-04-30 23:08:28","","3826372","CC BY-SA 4.0"
"108868385","61531317","3","excellent idea and answer :) Added to faq in tag wiki so we can easily find it for dupe closures.","2020-05-01 15:42:35","","203657","CC BY-SA 4.0"
"109263685","61772822","2","To recreate that error message, try `for (let val of (function () {})()) { }` - you're not *calling* the function in your example.","2020-05-13 11:04:18","","3001761","CC BY-SA 4.0"
"109263804","61772822","0","I suspect it could be a remnant of some proposal that allowed to pass generator functions instead of generators somewhere where iterators only are accepted now. @jonrsharpe Thanks, this triggers the error indeed.","2020-05-13 11:08:16","","3731501","CC BY-SA 4.0"
"109265669","61772822","0","It's something to do with using functions to construct primitives. JSC behaves similarly. `for (let val of Number(1)) {}` and `for (let val of Boolean(true)) {}` emit the same error. `for (let val of 1) {}` and `for (let val of true) {}` do not.","2020-05-13 12:02:59","","38522","CC BY-SA 4.0"
"109468925","61841254","0","The difference is `MergeMany` calls receive value one at a time as the values are available, whereas `collect()` waits until all values are available before calling receive value.","2020-05-19 13:14:53","","1298400","CC BY-SA 4.0"
"109745623","61825087","0","ODBC Drivers support connection strings that document the parameters required. https://www.connectionstrings.com/microsoft-access-odbc-driver/ you may also want to publish your own connection string or query it. I think that is what you are looking for. If you are using an ODBC driver to connect to a REST API there are solution that will query and generate the correct queries against the REST API. https://www.progress.com/tutorials/odbc/query-any-rest-api-using-odbc-in-5-mins---getting-started-(part-1) [I am not affiliated just mentioned for reference. Hope the above helps.","2020-05-27 18:36:55","","2733597","CC BY-SA 4.0"
"109746114","61825087","0","I'm not connecting to a REST API nor looking to do so, I'm using ODBC drivers to make connections to the DBMS. If we take ""REST"" out, what I'm asking is if there is a way to query the driver or scrape or determine its properties *programmatically*. Not via documentation. While that connection-string website does have value, it is incomplete (when compared to the original documentation at microsoft). Again, though, I'm asking about programmatic discovery. Thanks!","2020-05-27 18:52:51","","3358272","CC BY-SA 4.0"
"109907567","61825087","0","@r2evans can I rephrase your question to make sure I understand it? You are trying to access the @param codes of an installed ODBC driver pre-connection from the  `R` `odbc` interface? (When I say @param I'm referring to: https://github.com/r-dbi/odbc/blob/master/R/Driver.R)","2020-06-02 01:50:08","","3073340","CC BY-SA 4.0"
"109907635","61825087","0","I'm trying to determine ODBC parameters via *any* (programmatic) interface. R is not strictly required (though great if it is). The ""obvious"" parameters are not really a factor, such as server/host, user/uid, password/pwd. I'm trying to discover things like ""Encrypt"", ""AnsiDPW"", ""TrustServerCertificate"", three parameters that the MS ODBC driver happen to document. (ODBC seems to be such a wild-wild-west protocol, well beyond normal ""ANSI vs proprietary"", it seems more implement only what you really care about and name things in a haphazard manner ...).","2020-06-02 01:57:10","","3358272","CC BY-SA 4.0"
"109971099","61536203","0","Does the same rules apply to firestore too? Having increment call in a write batch assures the data is written without any problems? (Assuming 1write/sec/per doc limit)","2020-06-03 17:57:13","","413306","CC BY-SA 4.0"
"110619498","62550828","10","`Compiler.enable()` is an empty `static` method without any effect at all. I’m surprised to hear that it does not get optimized away in your Java 8 runtime. Besides that, I’m not sure whether I understand you correctly. Profilers depending on the safepoints distort the result, sure. But what you’re attempting now, is to insert the distortion into your code, to get more precision on the measurement of the already distorted execution.","2020-06-24 09:01:08","","2711488","CC BY-SA 4.0"
"111438136","63017136","1","With that you can talk to Microsoft guys directly https://github.com/dotnet/runtime/issues","2020-07-21 14:53:38","","11182","CC BY-SA 4.0"
"111438271","63017136","0","I'm not sure how accurate was your benchmarks as you used just raw code and Stopwatch. Can you try to use BenchmarkDotNet to reverify this? It could be just different core speed during two runs or something else. BenchmarkDotNet is a benchmarking library that is designed to eliminate all other factors","2020-07-21 14:57:23","","8882410","CC BY-SA 4.0"
"111438341","63017136","0","I found .Net Core to be much faster when I ported my graphics code that runs https://pixeldatabase.Net, which is built in Blazor. Like more than twice as fast for large images, so I guess it just depends on the workload.","2020-07-21 14:59:44","user12228709","","CC BY-SA 4.0"
"111438407","63017136","0","I saw that when I reread it. I edited my comment at the same time you were commenting.","2020-07-21 15:01:41","user12228709","","CC BY-SA 4.0"
"111438546","63017136","0","@Lemm I don't think BenchmarkDotNet is necessary for this particular code. I mean, it's 30% different, and it's using multiple trials.","2020-07-21 15:05:45","","106159","CC BY-SA 4.0"
"111438630","63017136","0","Just out of curiosity, could you try running the same test in x64?","2020-07-21 15:07:55","","108796","CC BY-SA 4.0"
"111829066","63075418","0","The latest version of the [Implementing Modern Collection Views sample code](https://developer.apple.com/documentation/uikit/views_and_controls/collection_views/implementing_modern_collection_views) includes an example of how to get started with a custom content configuration.","2020-08-04 05:56:17","","796419","CC BY-SA 4.0"
"112734474","63675627","0","Just a wild guess but I see GetStream() calls in your code without any associated Close/Dispose calls. Maybe implicit, but I'd look into this.","2020-09-05 07:47:23","","403671","CC BY-SA 4.0"
"113136463","63646183","0","@TSR This is browser-dependent, `name` is read-only by specs but can be writable in older browsers. As I mentioned, the goal is to solve described problem with types, `name` is just an example in existent TS typings. That a property is `readonly` in TS doesn't mean it's not writable at runtime.","2020-09-20 14:41:58","","3731501","CC BY-SA 4.0"
"113203332","64012057","0","Your question asks what the standard guarantees something, but then your comment says you're looking for a solution. These are different questions, leading to the confusion below. If you do want to ask both questions together, then edit the question. Also, are you fine with library solutions? boost, and range-v3 will let you get the effect you want in a couple of lines, with efficiency.","2020-09-22 20:26:42","","8372853","CC BY-SA 4.0"
"114633709","64830671","0","So I managed to find what looks like ARMv7 machine code docs; https://web.eecs.umich.edu/~prabal/teaching/eecs373-f10/readings/ARMv7-M_ARM.pdf -- you could decode the different binaries and see if one if them is, say, Intel and the other is ARMv7.  It really depends on how much you care.  :)","2020-11-14 18:06:54","","1774667","CC BY-SA 4.0"
"114633793","64830671","0","@Yakk-AdamNevraumont I'm pretty confident that both binaries have arm64 code (which I think is v8, not v7, but I'm not sure how much it matters). Considering the that binaries only differ in some metadata like the UUID and linker minor version used, plus a section about codesigning, and that I get a code signing message in the log, that seems like the most fruitful path to continue investigation.","2020-11-14 18:11:29","","155423","CC BY-SA 4.0"
"114876697","64977541","0","FWIW, MSVC v16.8 (using C++14 standard) gives `1` as the output. So, if it's a bug, it's been fixed already.","2020-11-23 22:47:54","","10871073","CC BY-SA 4.0"
"114876724","64977541","3","@AdrianMole It's not a bug, both results are conforming. Without elision they all print 0.","2020-11-23 22:49:34","","8372853","CC BY-SA 4.0"
"114876740","64977541","1","Some more digging, creating a ""console app"" in MSVC. The release x64 build (accepting the default optimisations) outputs 1, the debug x64 build outputs 0.","2020-11-23 22:50:43","","2380830","CC BY-SA 4.0"
"114876758","64977541","3","Yeah, elision is typically turned off when debugging. Not that I know if msvc does that, but it would be a reasonable thing to do.","2020-11-23 22:52:00","","8372853","CC BY-SA 4.0"
"114876893","64977541","3","Considering the answers, this could perhaps be an issue for clarification in the standard itself? Granted, behavior which isn't explicitly defined (or *undefined*) in the specification is left for implementations to define, which means both behaviors are equally valid. But I still think explicitly specified behavior is better (especially if it could lead to such mixed results as described here).","2020-11-23 22:58:09","","440558","CC BY-SA 4.0"
"114876944","64977541","5","@Someprogrammerdude Actually, the standard does specify this with something like ""certain calls may be elided even if they have observable side effects"". There's not much that can be done to specify it differently. Requiring no elision would affect performance in many cases, and requiring elision is not possible since implementations can't reasonably do that in all cases.","2020-11-23 23:00:50","","8372853","CC BY-SA 4.0"
"115312464","65224327","1","Ok, in this case I can only advice you to check the whole dependency tree for potential problems (incl. dependencies from your BOM) because it really looks like different Spring versions are present in the classpath. Also, don't waste time on playing with spring cloud - you definitely don't need to add it if you didn't have it before.","2020-12-09 22:13:09","","5572007","CC BY-SA 4.0"
"116883029","65967690","0","I am going to retract that last comment. I don't think that it is a loophole. Take a look at [this comment](https://android.stackexchange.com/a/231482). SD Maid and ""X-Plore"" ask for permission to ../Android/... the same way, so I am thinking that it is standard method. Still, it will be interesting to see the response to the bug report I posted in my last comment.","2021-02-08 23:04:37","","6287910","CC BY-SA 4.0"
"116899910","65967690","0","@Cheticamp Do you know perhaps how to implement the usage of this ""loophole"" (whether it is as such or not) ? Can you please try ? I have no idea why&how some file manager apps seem to have had it automatically already, somehow, either.","2021-02-09 14:15:28","","878126","CC BY-SA 4.0"
"117339318","65967690","0","`How can I request an Intent directly to ""Android"" folder?` Full bounty?","2021-02-25 15:44:42","","12121419","CC BY-SA 4.0"
"117339441","65967690","0","`looking for an answer from a reputable source. ` What do you mean by that?","2021-02-25 15:49:20","","12121419","CC BY-SA 4.0"
"117340329","65967690","0","It seems you did not reed my first comment  today.","2021-02-25 16:19:48","","12121419","CC BY-SA 4.0"
"117580168","66497269","1","@Quuxplusone nice write-up. Arguably, also pretty new effects due to CTAD (as well as tangent on the darned initializer_list/{} initialization conundrum), but the premise hasn't changed much indeed. You can't escape the tight coupling with inheritance, which means forfeit any future guarantees as the standard does change.","2021-03-06 23:39:13","","85371","CC BY-SA 4.0"
"117674316","66497269","0","@Quuxplusone   ci strings are a sore in the std.  One of their most annoying feature is they do nkot share the same storage space as regular strings...  I think it would be much more effective to write a case-insensitive map instead.  One that accepts a string_view as a parameter for find() would be nice to have to start with..","2021-03-10 14:17:13","","2430669","CC BY-SA 4.0"
"117674400","66497269","0","@MichaëlRoy ""ci strings"" simply do not exist in the standard. Heterogenous lookup has been added AFAIR. You can already create a string_view with custom traits. My standard ci-map is generic and takes 3 lines of code (using boost's `ilexicographical_compare`).","2021-03-10 14:20:16","","85371","CC BY-SA 4.0"
"117675171","66497269","0","I know they do not exist.  I also know that if they did, I would not be the only one using them.","2021-03-10 14:45:53","","2430669","CC BY-SA 4.0"
"118435220","66924519","0","@Andrey Yes, it imports something from node_modules, this is the case for >99% modular web projects. In this case it's Vue project and it imports at least `vue` itself. To make it clear, the reason why vendor chunk is produced is obvious (same for other possible initial chunks), the question is how to make it unnecessary to explicitly load chunk-vendors.js with `<script>` or else where a specific bundle is being used. I provided a project for completeness, it's currently based on Vue CLI setup with described Webpack config under the hood.","2021-04-08 11:20:42","","3731501","CC BY-SA 4.0"
"118435310","66924519","0","@TiagoCoelho This is the first thing I've checked but as I far as I can see, annotations are applicable only to dynamic imports, while these chunks are produced from static `import`.","2021-04-08 11:23:38","","3731501","CC BY-SA 4.0"
"119994570","67888049","0","I don't understand how `FisherYatesBad` could produce that nicely ordered parabolic result. I've used that algorithm and it shuffled stuff as expected.","2021-06-08 13:54:08","","2321042","CC BY-SA 4.0"
"119994894","67888049","3","I think it would be useful to describe what the plots are actually plotting, i.e. label axises etc.","2021-06-08 14:03:48","","12342238","CC BY-SA 4.0"
"119999402","67888049","3","Which version of .NET are you using?  The algorithm for `Random()` without a seed [was changed recently](https://github.com/dotnet/runtime/pull/47085) and might be applied to newer .NET versions.  See also: https://github.com/dotnet/runtime/issues/23198 .","2021-06-08 16:23:41","","815724","CC BY-SA 4.0"
"120020123","67888049","0","@Damien_The_Unbeliever - I initially thought that `OrderBy` might have been the culprit, but that's why I also tried with `BetterRandom`. Since that removed the bias I figured that `OrderBy` behaves properly.","2021-06-09 11:05:06","","259769","CC BY-SA 4.0"
"120834636","68332664","2","I opened https://forums.swift.org/t/missed-optimization-in-reversedcollection/50427","2021-07-14 02:23:07","","3141234","CC BY-SA 4.0"
"121111044","68505026","0","Thanks @Hasturkun, that does look interesting.","2021-07-26 11:56:27","","2402272","CC BY-SA 4.0"
"121111084","68505026","1","I don't follow, @oakad.  I know about Spectre and Meltdown, of course, but I am missing their relationship with the topics on which this question focuses.","2021-07-26 11:58:10","","2402272","CC BY-SA 4.0"
"121111894","68505026","0","""Grand scheme of things"". Prefetch optimization in hardware/microcode. :-)","2021-07-26 12:34:06","","2702398","CC BY-SA 4.0"
"121112068","68505026","0","This kind of plugs into why we have relaxed memory models in the first place, instead of sticking to sequential only.","2021-07-26 12:40:41","","2702398","CC BY-SA 4.0"
"121115516","68505026","0","Ok, @oakad, but there is no going without *some* memory model, and the optimizations relevant to the question are those performed by a C compiler, not CPU hardware or microcode.","2021-07-26 14:42:55","","2402272","CC BY-SA 4.0"
"121268132","67749284","0","Did you find any solution? I also want to do the same thing in android 12.","2021-08-02 08:36:04","","10196184","CC BY-SA 4.0"
"121269919","67749284","0","@ChiragBhuva No idea yet how to use it properly. I'm not even sure I want to use it.","2021-08-02 09:59:13","","878126","CC BY-SA 4.0"
"121538552","65463893","0","`1.1.0-alpha01` (`-02` and `-03` fails) and `android:allowBackup=""false""`worked for me, at least in the device it was throwing... I believe it's kind of random.","2021-08-13 11:51:33","","1423773","CC BY-SA 4.0"
"122914691","69530502","1","Could you use the change in state to determine what to do? If I interpret the table correctly, if you checked the current state before the first permission request you'd get ""no no no no"", and after the request you have ""no yes no no"". So there's a difference there. On the fourth request you'd go from ""no yes no no"" to (I presume) ""no yes no no"", i.e. no change in state.","2021-10-12 12:07:51","","1524450","CC BY-SA 4.0"
"122914765","69530502","0","@Michael: ""So there's a difference there"" -- yes, but that difference may be fairly separated in time, across separate processes. I know that if I track where we were in a file (e.g., `SharedPreferences`), I can handle this, but that leads to possible synchronization problems if the user later fiddles with permissions in Settings. I am trying to determine if there is a way to determine when we get to the fourth state without tracking the details in a persistent data store myself.","2021-10-12 12:11:06","","115145","CC BY-SA 4.0"
"122914842","69530502","0","_""but that difference may be fairly separated in time""_. What I meant was check once before `requestPermissions` and again when you get `onRequestPermissionsResult`.","2021-10-12 12:13:41","","1524450","CC BY-SA 4.0"
"122914895","69530502","0","@Michael: That would allow me to determine that I just went from the third state to the fourth state. However, unless I store something in a file, I will not know two weeks from now that I got to the fourth state and can no longer request the permission upgrade.","2021-10-12 12:16:26","","115145","CC BY-SA 4.0"
"122915022","69530502","2","Don't you always get a callback with a result, event if no dialog was shown? That's the way I remember it anyway. So what I'm talking about here is to always read the state twice: once before `requestPermissions`, then again when you get the results callback, and then compare the two. I'm not suggesting that you persist anything.","2021-10-12 12:22:06","","1524450","CC BY-SA 4.0"
"122916515","69530502","0","@Michael: OK, I think I see what you are proposing now. If I start in state 2/4, and I end in state 3, that means that I must have been in state 2 previously. If I start in state 2/4, and I end in state 4, that means that I must have been in state 4 previously. I can give that a try -- thanks!","2021-10-12 13:19:14","","115145","CC BY-SA 4.0"
"123023180","61122378","1","On my M1 MacBook Pro with Big Sur (never upgraded), the expected system voice are presents in /System/Library/Speech/Voices but ""say -v"" does not work as noted above. By ""expected"" I mean those available to me in the Accessibility Sys Pref pane (including AronSiri, Alison, Ava, NoraSiri, Samantha, and Tom).","2021-10-17 02:21:54","","5618246","CC BY-SA 4.0"
"123023218","61122378","2","Added for completeness: I can get high quality Tom or other on-Siri voices to work in Terminal when they are selected as ""System Voice"" in Accessibility.","2021-10-17 02:28:20","","5618246","CC BY-SA 4.0"
"123821048","70042442","2","I guess that T is changing the meaning within the paragraph. Once it is `int`, next it refers to `int *const`.","2021-11-20 10:58:11","","4989451","CC BY-SA 4.0"
"130505787","69530502","0","@CommonsWare running in to the exact same issue.  Again I don't think Google thought this through.  Regardless if anyone has an answer to this question it would be much appreciated.","2022-09-30 15:58:24","","1281501","CC BY-SA 4.0"
"130978167","67749284","0","@CheokYanCheng I don't know.","2022-10-24 17:16:34","","878126","CC BY-SA 4.0"
"105375751","59603086","1","@LanguageLawyer You are right","2020-01-06 02:00:23","","560648","CC BY-SA 4.0"
"105437074","59637100","0","Just curious: What happens in your first code if `self.iv.image` is nil?","2020-01-07 23:07:05","","1187415","CC BY-SA 4.0"
"105437136","59637100","0","@MartinR It works fine. (In real life I go on to `.store` the AnyCancellable as you would expect, and the code downloads and shows the image just fine.) That's why I'm confused; I didn't discover there was an ""issue"" until I tried to tease apart what `.assign` is doing behind the scenes by supplying my own Assign subscriber, subscribing it, and promoting it to AnyCancellable (not shown).","2020-01-07 23:10:05","","341994","CC BY-SA 4.0"
"105437176","59637100","0","@MartinR I'll add that to the q.","2020-01-07 23:12:16","","341994","CC BY-SA 4.0"
"105437211","59637100","0","I have no experience with Combine so far, so I do not “expect” anything :) – But I noticed that the inferred type of `let pub = ...` is `Publishers.ReceiveOn<Publishers.CompactMap<Publishers.ReplaceError<Publishers.Map<URLSession.DataTaskPublisher, Data>>, UIImage>, DispatchQueue>`.  If you annotate it explicitly, but with `UIImage` replaced by `UIImage?` then the error goes away. That seems to be what the compiler infers in the first example from `.assign(to: \.image, on: self.iv)` since `self.iv.image` is an optional.","2020-01-07 23:14:41","","1187415","CC BY-SA 4.0"
"105437404","59637100","0","The error also goes away if you replace `compactMap` by `map` – does that make sense? I am not sure.","2020-01-07 23:24:00","","1187415","CC BY-SA 4.0"
"105437627","59637100","0","@MartinR If you break the chain at `receiveOn`, its output typed as UIImage. If you add `assign`, `receiveOn` output is typed as UIImage?. It is as if the `assign` is able to push the optionality _up_ the pipeline. I don't understand how it does that.","2020-01-07 23:37:34","","341994","CC BY-SA 4.0"
"105437666","59637100","0","You are also right that if we `eraseToAnyPublisher` and type the `pub` generic explicitly as parameterizing UIImage? the whole problem goes away. I'll add that to the question.","2020-01-07 23:39:54","","341994","CC BY-SA 4.0"
"105799821","59787879","0","Note: in the first example, passing `g` (instead of `&g`) to the function template causes a type decay (a function lvalue reference decays to a pointer to a function: `void(&)(T)` => `void(*)(T)`). This implicit convertion happens because there is no other `f` overload with a better match. In the second example, there is an ambiguity which `f` you want to actually call because ... it doesn't know which `f` is the argument either.","2020-01-20 22:34:28","","4818802","CC BY-SA 4.0"
"106259999","60079472","0","So what are the exact restrictions? What is the minimal time that is guaranteed that a trigger will work in a relatively precise give time ?","2020-02-05 17:11:37","","878126","CC BY-SA 4.0"
"106260245","60079472","0","I can't remember exact restrictions but when I was working on it I googled for like days to overcome background service getting killed automatically. And from personal observation I noticed issue on Samsung, Xiaomi, etc, you cant call alarmManger in between interval of 5 mins, I had a data upload service implemented using alarmManger which get triggered every 1 min, but it disappointed our client who complained the service isn't running at all. For emulators it works well.","2020-02-05 17:20:22","","12768925","CC BY-SA 4.0"
"106295484","60079472","0","@greeble31 Sadly I tried it too, and wrote about it on the question (number 6 currently).","2020-02-06 17:14:33","","878126","CC BY-SA 4.0"
"106322754","60114639","7","I'm also facing the same issue :(","2020-02-07 14:25:19","","12232795","CC BY-SA 4.0"
"106379410","60114639","0","@Muzzamil Thanks for the answer. Actually, the error effects some high end functionalities and the error comes due to a mess up by ChromeDriver team while releasing _ChromeDriver v80_. See [this](https://stackoverflow.com/questions/60114639/timed-out-receiving-message-from-renderer-0-100-log-messages-using-chromedriver/60140212#60140212). We had been recommending `PageLoadStrategy.NONE` for scraping but won't be a good idea when testing applications.","2020-02-10 08:34:57","","7429447","CC BY-SA 4.0"
"106381858","60114639","2","@DebanjanB Yes I went through your post. I hope they can fix it in next release. I tried to find out the solution so I have mentioned it but there is more options to prevent timeout. I will try it with other option but if timeout duration is very less then I think we need to wait for next release.","2020-02-10 10:01:21","","10091597","CC BY-SA 4.0"
"106387490","60150749","6","Typing a constructor doesn't sound so terrible. Unless you have too many members, in which case, maybe refactoring is in order.","2020-02-10 12:53:52","","889742","CC BY-SA 4.0"
"106387504","60150749","0","If you're supposed to initialize all members and forgot one, then the error makes sense and should be there to remind you that you need to initialize them all.","2020-02-10 12:54:24","","440558","CC BY-SA 4.0"
"106387559","60150749","0","I read the question as: You want to enable `VariablePointers{activePtr, wasactivePtr,filename};` but at the same time `VariablePointers{activePtr, filename}` should be an error (it is a warning only), is this correct?","2020-02-10 12:55:42","","4117728","CC BY-SA 4.0"
"106387569","60150749","0","@Some but it is a warning only...","2020-02-10 12:56:03","","4117728","CC BY-SA 4.0"
"106387574","60150749","1","@Someprogrammerdude I think he means the error is that you can accidentally omit an initializing value","2020-02-10 12:56:15","","889742","CC BY-SA 4.0"
"106387589","60150749","0","To prevent such situations, you gotta use an array/vector!","2020-02-10 12:56:31","","8192043","CC BY-SA 4.0"
"106387620","60150749","1","@idclev463035818 Which is why one should always build with e.g. `-Werror` to turn them into errors. :)","2020-02-10 12:57:13","","440558","CC BY-SA 4.0"
"106387634","60150749","2","@theWiseBro if you know how array/vector helps you should post an answer. Its not that obvious, I dont see it","2020-02-10 12:57:31","","4117728","CC BY-SA 4.0"
"106387783","60150749","2","@Someprogrammerdude But is it even a warning? Can't see it with VS2019.","2020-02-10 13:01:15","","1332041","CC BY-SA 4.0"
"106387800","60150749","0","Add a constructor.","2020-02-10 13:01:50","","5910058","CC BY-SA 4.0"
"106387951","60150749","9","There is a `-Wmissing-field-initializers` compilation flag.","2020-02-10 13:06:13","","8751754","CC BY-SA 4.0"
"106388068","60150749","0","@acraig5075 Unfortunately MSVC doesn't do it, or have an option to enable it (that I found). For GCC and Clang it's `-Wmissing-field-initializers` (which is included with `-Wextra`).","2020-02-10 13:09:39","","440558","CC BY-SA 4.0"
"106388087","60150749","0","@Ron True, for *some* compilers. Not all.","2020-02-10 13:10:07","","5910058","CC BY-SA 4.0"
"106396330","60150749","0","@Ayxan So What?","2020-02-10 17:16:37","","5910058","CC BY-SA 4.0"
"106397717","60150749","0","I guess @Jesper wants me to wait for metaclasses https://www.fluentcpp.com/2017/08/04/metaclasses-cpp-summary/ , right?","2020-02-10 18:09:03","","34509","CC BY-SA 4.0"
"106453488","60150749","0","@S.S. In a perfect world, you don't get build issues from developers confusing development and release to begin with.","2020-02-12 10:29:24","","938694","CC BY-SA 4.0"
"106486172","60150749","0","Another simple way to achieve this is to not give the VariablePtr member type a no-arg constructor","2020-02-13 08:47:46","","889742","CC BY-SA 4.0"
"106667670","60114639","0","I am also facing this issue. It started after adding Chrome v80 to my Project. Please, let's know the best way around this aside from having to downgrade the version of Chrome.","2020-02-19 14:02:51","","6952393","CC BY-SA 4.0"
"106857331","60079472","0","Try to use `adb shell dumpsys alarm` to check if your alarm is properly scheduled. If you initially see it then it disappears after you clear the app from recent tasks, I'm afraid this means the OS clears the alarm when you ask it to kill the app and there is nothing you can do but reschedule the alarm when the app is restarted.","2020-02-25 23:56:26","","2602791","CC BY-SA 4.0"
"106910554","60286204","0","Can you give url if that is not confidential?","2020-02-27 13:22:52","","5036698","CC BY-SA 4.0"
"107358777","60442205","0","[Related](https://stackoverflow.com/q/1087042/10957435), but not exactly a duplicate, since you have a more specific question.","2020-03-14 05:59:51","user10957435","","CC BY-SA 4.0"
"107372751","60565299","0","@Cheticamp Still, the framework itself can read it just fine. Those are all APK files that are installed fine on my device. Some didn't have this exact issue that you describe, and one of them is extremely old.","2020-03-14 22:34:40","","878126","CC BY-SA 4.0"
"107372817","60565299","0","And yet, DexGuard claims to be able to obfuscate the manifest file. I don't know how they do it and still have the framework read the manifest, but it's an area to look into IMO. As for the other issues, have you looked into using XmlPullParser to extract just what you need? Maybe you already tried this and I didn't read carefully enough.","2020-03-14 22:40:46","","6287910","CC BY-SA 4.0"
"107372859","60565299","0","I already mentioned all of the issues I've found, and it's not ""mnfs"" for most cases. It's only for the first 2 cases. Also, if you try to parse those via some online tool, it will still work fine.","2020-03-14 22:44:42","","878126","CC BY-SA 4.0"
"107521067","60565299","0","@Cheticamp I tested it. Seems that a lot of zip compression types are not supported, and in some weird cases, ZipFile can open while ZipInputStream can't. So I reported here: https://issuetracker.google.com/issues/151990857 . However, as I've tested, I couldn't reproduce this issue on APK files. The file he tested was of ""xapk"" which is something that some website invented, to include more than just APK file. The link says that we can use SeekableInMemoryByteChannel  . Wonder how this works. Couldn't find a sample. I don't understand what is the conclusion from your testing.","2020-03-20 09:23:46","","878126","CC BY-SA 4.0"
"107521234","60565299","0","@Cheticamp Also, the zip opening isn't the issue. You can probably find various libraries that can handle all kinds of zip files (maybe this: https://github.com/zeroturnaround/zt-zip ) . The issue is parsing using InputStream. It doesn't have to be ZipInputStream. I used it in the sample to show the real issue.","2020-03-20 09:30:29","","878126","CC BY-SA 4.0"
"107889562","60982068","1","I think this is a duplicate of https://stackoverflow.com/questions/51595900/run-google-cloud-build-in-a-specific-region-and-zone. You should still be able to email cloud-build-contact@google.com to get access to the early-access program.","2020-04-02 00:59:52","","328036","CC BY-SA 4.0"
"107889667","60982068","0","Is not at all, actually the question is about in which region or zone the artifacts are being stored.","2020-04-02 01:10:12","","12265927","CC BY-SA 4.0"
"108121589","61114929","0","@M.M Isn't std::endian an enum class? One of the solutions should apply to it. Did you check it?","2020-04-09 07:46:46","","645551","CC BY-SA 4.0"
"108121870","61114929","0","@freakish ""enum class"" is still an enum, not a class","2020-04-09 07:55:46","","1505939","CC BY-SA 4.0"
"108182615","61151278","0","What would be a use case for an object that needs to be initialized and disposed immediately?","2020-04-11 02:39:43","","2045559","CC BY-SA 4.0"
"108182622","61151278","1","@Saeid that’s not how this feature works","2020-04-11 02:40:18","","23528","CC BY-SA 4.0"
"108182648","61151278","0","I wish you could elaborate a little bit more. It is an interesting question but I want to understand why would you not care or interact with a variable for a disposable object.","2020-04-11 02:42:34","","2045559","CC BY-SA 4.0"
"108182668","61151278","2","@Saeid it’s a common pattern in logging and other areas to provide a sort of context or explicit scope","2020-04-11 02:44:42","","23528","CC BY-SA 4.0"
"108223867","60583049","0","Could this help https://developer.mozilla.org/en-US/docs/Web/API/Clients/claim ?","2020-04-12 17:43:38","","12610347","CC BY-SA 4.0"
"108223938","60583049","0","@x00 No, the Service Worker API is unrelated.","2020-04-12 17:46:03","","362536","CC BY-SA 4.0"
"108253595","60583049","0","There is a workaround described here: https://stackoverflow.com/questions/47757168/how-to-close-a-progressive-web-app","2020-04-13 16:54:04","","3098783","CC BY-SA 4.0"
"108405249","61278180","1","Putting a space between `0.f` and `.T` causes both GCC and Clang to accept this...","2020-04-17 18:34:08","","962089","CC BY-SA 4.0"
"108405289","61278180","1","As well as `(0.f).T::~T();`","2020-04-17 18:35:52","","8372853","CC BY-SA 4.0"
"108405301","61278180","0","A simple `float f = 1.0f.t;` will produce the error about the numeric literal.","2020-04-17 18:36:14","","5231607","CC BY-SA 4.0"
"108405322","61278180","0","A `float` is a *built-in* type, it doesn't have a destructor for you to call. What are you even doing manually calling destructors? Outside of placement-new territory, that should be a *big* no-no.","2020-04-17 18:37:00","","5910058","CC BY-SA 4.0"
"108405350","61278180","0","@JesparJuhl its not a destructor but a pseudo destructor, I just got to know that it exists. The tag info has an example (which also has a not justified call to the destructor btw)","2020-04-17 18:37:58","","4117728","CC BY-SA 4.0"
"108405394","61278180","0","@idclev463035818 Pseudo or not, valid or not, code like that shouldn't be written (IMHO). *Why* would you do that in any sane application?","2020-04-17 18:39:28","","5910058","CC BY-SA 4.0"
"108405526","61278180","0","@JesperJuhl The question is about syntactical correctness of this construction.","2020-04-17 18:44:09","","2877241","CC BY-SA 4.0"
"108405740","61278180","0","@chris It is funny that when I write this 0.f .T::~T() in Visaul C++ then it automatically removes the blank.:)","2020-04-17 18:52:04","","2877241","CC BY-SA 4.0"
"108714519","60114639","0","The bug seems that will be fixed in Chromedriver 83 (May19 for Chrome83 availability) https://bugs.chromium.org/p/chromedriver/issues/detail?id=3332&sort=-id&q=&can=1","2020-04-27 10:37:22","","3266007","CC BY-SA 4.0"
"108920372","61521819","0","This has been closed once as not focused, and reopened; if anyone has any suggestions for which parts I could leave out or split off to another question that would be good.  My feeling is that the side questions about specifics help to focus the overall direction of what I'm asking; otherwise ""how does modern VGA hardware work / perform"" would be textbook too broad.  And the close voters the first time around all had no significant asm / x86 tag score, so hopefully those of use who do find the general subject interesting think this is an ok question.  I know it's not great. :/","2020-05-03 14:01:53","","224132","CC BY-SA 4.0"
"109467539","61841254","0","Oh yeah, I used MergeMany to combine the array of publishers in the flatMap. That was an important detail.","2020-05-19 12:35:47","","1298400","CC BY-SA 4.0"
"109467696","61841254","0","@JefferyThomas So you are referring to what I’m already doing. But that is what I don’t want to be doing.","2020-05-19 12:39:49","","341994","CC BY-SA 4.0"
"109743512","61825087","1","Just to be clear here - you are looking for a way to programmatically query the ODBC driver and retrieve the API capabilities? Correct? Are you connecting through to a REST API via an ODBC driver?","2020-05-27 17:28:15","","2733597","CC BY-SA 4.0"
"109743565","61825087","0","I don't know of an API for ODBC *drivers* (is there such a thing?), but most likely the ODBC protocol itself. One problem is that drivers are all written by different organizations, so I think looking at the driver DLLs themselves is weak to begin with. I'm asking if there is a programmatic way (within the ODBC spectrum?) to discover the existence and names of the parameters, even if nothing more than that.","2020-05-27 17:30:10","","3358272","CC BY-SA 4.0"
"109868678","61825087","0","@JoshuaMire, thanks for the comment (deleted answer) about `RODBC` versus `odbc`. I don't think it matters: its [docs](https://cran.r-project.org/web/packages/RODBC/vignettes/RODBC.pdf) even say *""What fields are supported is driver-specific (and it can be hard to find documentation)""*, suggesting the author is not aware of programmatic discovery (or at least has not deeply investigated them). I fear this question is mostly just confirmation that ODBC as a protocol does not support the concept. Thanks again.","2020-05-31 18:39:59","","3358272","CC BY-SA 4.0"
"110986772","62738704","0","Another thought: `prc1 = proc { |l| @l = l; def self.foo; @l.call; end; foo }; prc1.call ->{ 456 }` works too, which might help if you're trying to preserve the deferred execution semantics, but I'm not sure why this level of indirection is beneficial. I get that you're trying to dynamically define how your Proc is getting its values at execution time, but it just seems like the long way around when injecting literals as arguments or referring to a data object in the binding would be so much easier.","2020-07-06 17:25:57","","1301972","CC BY-SA 4.0"
"110986951","62738704","0","A Proc's execution is deferred. Until called, self points to the current binding, rather than the current instance of Proc. If you don't want to do a Binding#eval or inject a block, proc, or lambda when calling a ""master proc"", I don't see how you can do what you want at declaration time rather than during deferred execution.","2020-07-06 17:32:29","","1301972","CC BY-SA 4.0"
"111439361","63017136","0","@MatthewWatson I've run your code and observe almost the identical results for both target frameworks and debug/release configuration","2020-07-21 15:29:28","","4728685","CC BY-SA 4.0"
"111439416","63017136","0","@MatthewWatson May be to obvious but is this debug or release build","2020-07-21 15:31:05","","6517621","CC BY-SA 4.0"
"111439440","63017136","1","@HasanEmrahSüngü As I said in my post , it's a release build.","2020-07-21 15:31:52","","106159","CC BY-SA 4.0"
"111440395","63017136","0","@Blindy Yes, that's interesting - .Net Framework and .Net Core take about the same time for x64","2020-07-21 16:01:33","","106159","CC BY-SA 4.0"
"111459795","63017136","0","@HansPassant I originally was using that, and changed it to the inline code to see if that made any difference, but it didn't make any significant difference to the ratio between the two builds.","2020-07-22 08:21:52","","106159","CC BY-SA 4.0"
"111837441","63075418","2","@smileyborg Indeed, and so does my answer. What I’m saying is that that should have been in the video. Just like in the UISplitViewController video, they walk right up to the interesting, important part and then suddenly walk away from it again with no explanation.","2020-08-04 11:21:19","","341994","CC BY-SA 4.0"
"113201032","64012057","2","FWIW, assuming the vectors have the same length, you could consider populating a vector with integers `0` .. `vec1.size() - 1`, shuffling that, and using it to index into `vec1` and `vec2`.","2020-09-22 18:54:41","","410767","CC BY-SA 4.0"
"113201282","64012057","0","@TonyDelroy: Yeah, but sometimes you really do need to physically reorder the vectors (and physically reordering them using a shuffled index vector is expensive and awkward compared to a direct shuffle). What I'd really like is some sort of `pair_thing(vec1, vec2)` backed by the original two vectors, where shuffling the pair thing automatically shuffles the original vectors together.","2020-09-22 19:04:37","","2357112","CC BY-SA 4.0"
"113201300","64012057","0","I double-checked the Standard and agree there's nothing requiring `shuffle` make any guarantees about its use of random numbers.  It simply remarks _""To the extent that the implementation of this function makes use of random numbers, the object referenced by g shall serve as the implementation’s source of randomness.""_.  So, the remaining question seems to be whether you're interested in implementation-defined or -observed behaviour for any specific implementation(s), or will stick to a Standards-compliant portable solution (e.g. shuffling proxy objects or using an array of indices)...?","2020-09-22 19:05:16","","410767","CC BY-SA 4.0"
"113215664","64012057","0","@user2357112supportsMonica Not sure I agree that it’s inefficient — there are O(n) algorithms for reordering, so it’s asymptotically as efficient as sorting twice (but requires O(n) additional storage).","2020-09-23 08:55:19","","1968","CC BY-SA 4.0"
"113326064","63646183","0","@EstusFlask Does my new answer below help? If so please accept","2020-09-27 08:52:03","","6727914","CC BY-SA 4.0"
"113429930","64081701","0","@Paulw11 No, you're right, but neither of those things makes any difference. It's perfectly legal to have the data live entirely in the data source. It sounds like you're implying that the only way to make a reloadable snapshot is to have a data source where the cell provider function doesn't look at the value that it is given at all — it has to look outside the data source entirely, at the backing store. But if I wanted to do that, what on earth is the diffable data source for? I could have just stuck with the old `cellForRowAt` implementation.","2020-09-30 20:03:23","","341994","CC BY-SA 4.0"
"113429963","64081701","0","Moreover, if the data source is not going to pick up the `bool` value, then why am I including it at all? You're saying I would keep the bools _only_ in the external ""backing store""? That seems nutty to me.","2020-09-30 20:04:54","","341994","CC BY-SA 4.0"
"113430003","64081701","0","And in any case you are still not explaining what happened between the two print statements: I provided a new value and said reload it, and it was not in fact reloaded. So what is reloading for? Are you saying it is so that the cell provider function will be called again so I can look at the _backing store_?","2020-09-30 20:06:22","","341994","CC BY-SA 4.0"
"113430052","64081701","0","Yes, I have deleted the comment while I think about it some more. However, my understanding is that the main benefit of the diffable data source was that it let you simply manipulate your backing store without having to worry about the sequence of insert/move/delete that often caused crashes with the old approach. You simply provide the cell you are asked for and you can add operations to the snapshot in terms of the identifiers you are adding/moving/deleting without having to worry about array indices or even section indices.","2020-09-30 20:08:26","","3418066","CC BY-SA 4.0"
"113430115","64081701","0","I agree that it should, in theory, be possible for the data to live purely in the snapshot, in practice you would almost always have some persistence store that is providing your data and you would typically use that or its in memory representation.","2020-09-30 20:10:52","","3418066","CC BY-SA 4.0"
"113430352","64081701","0","@Paulw11 OK, so I have to revise my entire understanding of what a diffable data source is and what ""works"" means. I just don't like it. I feel this _should_ be made to work with no backing store, and I have filed a bug on the fact that it does not.","2020-09-30 20:21:03","","341994","CC BY-SA 4.0"
"113431550","64081701","1","Going back to the WWDC 2019 video, I agree you should be able to use the datasource without any other backing store.  I had a play around with your example code, and it definitely looks like a bug to me. If you make `UniBool` a class and not a struct then you get the expected behaviour. It seems like` reloadItems` does not actually take the new value from the snapshot so it works with a reference type.","2020-09-30 21:13:22","","3418066","CC BY-SA 4.0"
"113431939","64081701","0","If we make UniBool a class, there is no need to call `reloadItems` in the first place, so that doesn't really prove as much as one might have hoped. I expect I'll be told that you _are_ supposed to use a back store and that this ""works as intended"". But it's worth a try. Thanks for confirming my intuitions about it.","2020-09-30 21:32:44","","341994","CC BY-SA 4.0"
"113432131","64081701","1","Yes, the impression they give is that you usually don't need a backing store; it is for the situation where some outside influence can come along asynchronously and change the data. And I notice that in their own examples, such as the Modern Collection Views example, they do not routinely use a backing store. They do sometimes demonstrate _how_ to use one, in case you happen to have one, but they do not use it all the time.","2020-09-30 21:42:00","","341994","CC BY-SA 4.0"
"114628978","64830671","0","@Yakk-AdamNevraumont sadly, Beyond Compare _also_ crashes on opening up the failing executable.","2020-11-14 13:15:40","","155423","CC BY-SA 4.0"
"114905225","64977541","0","Do you also have a difference when compiling as C++17?","2020-11-24 20:00:38","","3204551","CC BY-SA 4.0"
"115652648","64081701","0","Struct is a value type (https://www.swiftbysundell.com/basics/value-and-reference-types/) . This was the reason of the confusion with the print statements. When you assign the struct to another variable, it will have another copy of the struct. So changing the value will not effect the initial struct.","2020-12-22 21:00:30","","4064155","CC BY-SA 4.0"
"116070313","65648897","10","I believe this is [boost::equality_comparable2 operator== can compile into infinite loop with clang10 and -std=c++2a](https://github.com/boostorg/utility/issues/65)","2021-01-10 00:23:58","","1708801","CC BY-SA 4.0"
"116070381","65648897","4","@ShafikYaghmour You guys are seriously fast. The world does not deserve this level of support. Thank you","2021-01-10 00:29:34","","85371","CC BY-SA 4.0"
"116070412","65648897","1","I don't think this is a dupe, but it's definitely related https://stackoverflow.com/questions/64130311","2021-01-10 00:33:13","","8372853","CC BY-SA 4.0"
"116070456","65648897","1","@cigien Appreciated. The explanations in the answers there are excellent and help forming a more complete understanding.","2021-01-10 00:36:17","","85371","CC BY-SA 4.0"
"116636664","65967690","0","I see and quote `// Provide read access to files and sub-directories in the user-selected
    // directory.
    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);`. Well that is an error in that doc. Remove it and you will see. And think about it: how could it do without a WRITE flag then?","2021-01-30 13:27:10","","12121419","CC BY-SA 4.0"
"116636770","65967690","0","Still didn't work. I tried without, I tried FLAG_GRANT_WRITE_URI_PERMISSION instead, I tried them both. All of these options get me the same result. Also, for some reason, sometimes it didn't show me the ""use this folder"" button, and I had to go to a different folder and back. Seems like weird issues on the folder-picker UI. Can you please try it out too?","2021-01-30 13:35:09","","878126","CC BY-SA 4.0"
"116636870","65967690","0","I have seen such things before. But I do not put those flags on that intent to begin with. As said: makes no sense. At taking the permanent uri permissions just look which ones are offered to you. You will see that putting them has no effect at all. That doc is wrong.","2021-01-30 13:41:01","","12121419","CC BY-SA 4.0"
"116637389","65967690","0","OK but as I wrote now, even without them it didn't help. Can you please check it out?","2021-01-30 14:16:01","","878126","CC BY-SA 4.0"
"116637730","65967690","0","About targeting Android 10, seems the access to the folder is still possible even when targeting Android 11. That's because I've noticed MixPlorer succeeding in this.","2021-01-30 14:34:54","","878126","CC BY-SA 4.0"
"116637784","65967690","0","I have no idea what i should check out. And indeed you should target 10 and add that extra flag.","2021-01-30 14:38:18","","12121419","CC BY-SA 4.0"
"116638101","65967690","0","As I wrote, you can still target API 30 (Android 11) and it will still work. I noticed it on a different app. Therefore, the target API doesn't matter (at least for now).","2021-01-30 14:55:43","","878126","CC BY-SA 4.0"
"116638255","65967690","0","??? I have no idea what i should check.","2021-01-30 15:04:08","","12121419","CC BY-SA 4.0"
"116638599","65967690","0","I've presented code. You say that you know how to do it and that I did it wrong. Please try either my code or show your own, of how to reach the folders. The question still is about how to reach the folders (and would be very nice to know how to have request to be directly to the folder, too).","2021-01-30 15:21:07","","878126","CC BY-SA 4.0"
"116638996","65967690","0","??? What did i say that i know how to do it? I never said such things.","2021-01-30 15:41:55","","12121419","CC BY-SA 4.0"
"116639328","65967690","0","You wrote 3 things in the beginning saying that I'm wrong (and I showed I'm not, BTW), so this means you think you know what should be done. Please explain what should be done.","2021-01-30 15:59:02","","878126","CC BY-SA 4.0"
"116833006","66075419","1","I [hate](https://bugs.openjdk.java.net/browse/JDK-8033709) narrowing capture conversion with regards to bounded wildcards. This is probably the 4-th time in my lifetime that I hit similar problems. Specifically, what in the world is _from capture conversion (§5.1.10), **if necessary**_. What do you mean _if necessary_. Isn't capture conversion _ALWAYS_ applied? And of course ""upper bound ..."" of that. `JLS` does not explain (at least to me), what that is. I really want to know an answer too :(","2021-02-06 20:31:27","","1059372","CC BY-SA 4.0"
"116833043","66075419","1","Or even read this [issue](https://bugs.openjdk.java.net/browse/JDK-8078084) that says : ""Otherwise, map wildcards and type variables to their upper bounds, and then test whether their erasures are related classes or interfaces (that is, one erased type is a subtype of the other)"", only immediately after to say : _This is unsound..._. To me this is a `JLS` bug(s), but I am too afraid to post as an answer.","2021-02-06 20:34:11","","1059372","CC BY-SA 4.0"
"117347581","65967690","0","@blackapps I don't understand.","2021-02-25 21:13:00","","878126","CC BY-SA 4.0"
"117347694","65967690","0","You are not interested in a solution only for question one. Well ok. No bounty for that.","2021-02-25 21:18:32","","12121419","CC BY-SA 4.0"
"118519204","67051520","0","Huh, I didn't even know this was a function in the standard library, I thought it was a special form in the language.","2021-04-12 01:12:22","","3141234","CC BY-SA 4.0"
"118746508","67081496","0","If the `recode` and `fct_recode` variants can't deal with `.`, then they're not general enough.","2021-04-20 13:30:58","","903061","CC BY-SA 4.0"
"118820538","67222143","0","Type `5726718050568503296 > Number.MAX_SAFE_INTEGER` in your browser console.","2021-04-22 23:45:55","","182668","CC BY-SA 4.0"
"118820547","67222143","0","@Pointy `Number.MAX_SAFE_INTEGER` only guarantees the values below are safely representible. But it does not say that everything above those values are unsafe.","2021-04-22 23:46:41","","251311","CC BY-SA 4.0"
"118820551","67222143","0","Yes it does, otherwise ""max safe integer"" would be a ridiculous name for the constant.","2021-04-22 23:47:16","","182668","CC BY-SA 4.0"
"118820562","67222143","0","@Pointy check its description - https://tc39.es/ecma262/#sec-number.max_safe_integer. It means not what you think it means","2021-04-22 23:47:48","","251311","CC BY-SA 4.0"
"118820566","67222143","0","@ASDFGerte it is, see the binaryconvert link","2021-04-22 23:48:07","","251311","CC BY-SA 4.0"
"118820570","67222143","0","Why are you questioning something that is plainly true? Your value is too big to represent exactly.","2021-04-22 23:48:13","","182668","CC BY-SA 4.0"
"118820573","67222143","2","IEEE 754 doubles have 51 bits of mantissa. That's about 17 decimal digits. Your number has 19 digits.","2021-04-22 23:48:23","","1491895","CC BY-SA 4.0"
"118820577","67222143","1","@Pointysee the binaryconvert, it's EXACTLY REPRESENTIBLE in IEEE754 doubles.","2021-04-22 23:48:37","","251311","CC BY-SA 4.0"
"118820581","67222143","0","Well I guess all of our computers are broken then.","2021-04-22 23:48:57","","182668","CC BY-SA 4.0"
"118820584","67222143","0","@Barmar binaryconvert and Go can exactly represent it though?","2021-04-22 23:49:05","","251311","CC BY-SA 4.0"
"118820607","67222143","0","That website is simply wrong.","2021-04-22 23:50:41","","182668","CC BY-SA 4.0"
"118820649","67222143","0","Btw, IEEE754 float64 have 52bits mantissa, and with the leading 1 convention, that's 53 bits precision, not 51.","2021-04-22 23:54:34","","6692606","CC BY-SA 4.0"
"118820686","67222143","0","C++ https://ideone.com/Fjj4rK but Java: https://ideone.com/dK3Bk9 :shrug:","2021-04-22 23:57:16","","251311","CC BY-SA 4.0"
"118820758","67222143","0","Ah, my above was even more wrong - it only needs to be a power of two multiple of some representable integer (minus one digit precision or something, i didnt finish thinking). What happens, when we construct the exact representation in a typed array, and read that?","2021-04-23 00:03:47","","6692606","CC BY-SA 4.0"
"118820792","67222143","0","It could be that the issue involves the way the runtime accumulates the numeric value when parsing the text of the constant. If it's using the language environment's native floating point *incrementally* as it parses, then an overflow *before* it gets to the last digit will cause a truncation.","2021-04-23 00:06:46","","182668","CC BY-SA 4.0"
"118820812","67222143","0","An interesting experiment in JavaScript would be to construct an 8-byte UInt8Array and fill it with the binary that should be correct, and then see what mapping that buffer to a Float64Array of 1 element gives you.","2021-04-23 00:08:28","","182668","CC BY-SA 4.0"
"118820824","67222143","1","@zerkms 5726718050568503296 = 2^18 * 21845695688509, and 21845695688509 only requires 45 bits. So you're absolutely right that it's representable.","2021-04-23 00:09:55","","616815","CC BY-SA 4.0"
"118820831","67222143","0","@KenWayneVanderLinde well it's definitely bigger than `Number.MAX_SAFE_INTEGER`","2021-04-23 00:10:42","","182668","CC BY-SA 4.0"
"118820838","67222143","1","@Pointy have you checked what `MAX_SAFE_INTEGER` means? It's not what you think it means: https://tc39.es/ecma262/#sec-number.max_safe_integer It's for representability of a `R` and `R+1`.","2021-04-23 00:11:08","","251311","CC BY-SA 4.0"
"118820850","67222143","0","I'm thinking that another *possible* explanation is that in some runtimes there may be code that uses the 80-bit precision available internally (and, to some extent, externally) on Intel CPUs. (Not just Intel obviously, but you know what I mean.)","2021-04-23 00:12:48","","182668","CC BY-SA 4.0"
"118820856","67222143","1","@Pointy That really has nothing do with it. There are a lots of representable integers above `Number.MAX_SAFE_INTEGER`.","2021-04-23 00:13:10","","616815","CC BY-SA 4.0"
"118820866","67222143","0","The 80-bit precision is a really interesting possibility.","2021-04-23 00:13:54","","616815","CC BY-SA 4.0"
"118820870","67222143","0","@KenWayneVanderLinde yes but this number definitely requires more mantissa bits. Recall that the mantissa represents a binary *fraction*, not a binary integer.","2021-04-23 00:14:08","","182668","CC BY-SA 4.0"
"118820948","67222143","0","@Pointy Same difference :) The only way that matters is for the exponent, but the mantissa representation is identical either way.","2021-04-23 00:20:46","","616815","CC BY-SA 4.0"
"118820952","67222143","0","I have reconstructed the value in Go from naked bits: https://play.golang.org/p/zMspidoIh2w So the value is totally representible.","2021-04-23 00:21:05","","251311","CC BY-SA 4.0"
"118820974","67222143","0","@Pointy ^ ^ ^ ^","2021-04-23 00:22:37","","251311","CC BY-SA 4.0"
"118820991","67222143","0","@Barmar ^ ^ ^ ^","2021-04-23 00:24:10","","251311","CC BY-SA 4.0"
"118820994","67222143","0","Yes. but as I said *something* has to read the *textual representation* of the value and perform a series of multiplications and additions in order to create the internal 64-bit floating point value. If along the way there's an unrepresentable intermediate value, you can't end up with the final correct value.","2021-04-23 00:24:20","","182668","CC BY-SA 4.0"
"118821002","67222143","1","@Pointy ""you can't end up with the final correct value"" --- I have just demonstrated **you can**: https://play.golang.org/p/zMspidoIh2w","2021-04-23 00:24:56","","251311","CC BY-SA 4.0"
"118821006","67222143","0","And as I said the ""naked bits"" approach can be done in JavaScript too with typed arrays, if you want to experiment.","2021-04-23 00:25:08","","182668","CC BY-SA 4.0"
"118821013","67222143","0","@Pointy my question is originally: ""why in JS this number is broken"". Given it's broken, what's the point to check it the second time? I checked it with typed arrays, it returns a value with lost precision. My question stays the same: why?","2021-04-23 00:25:43","","251311","CC BY-SA 4.0"
"118821017","67222143","0","But @zerkms that's a Go example. JavaScript is not the same runtime. I have no idea what Go does to parse numeric constants but it's far from unbelievable that it might be different than what a JavaScript runtime does.","2021-04-23 00:25:57","","182668","CC BY-SA 4.0"
"118821025","67222143","0","@Pointy ""hat Go does to parse numeric constants"" --- it does not parse numeric literals in my code, it fills the bits of ieee754 double. ""JavaScript is not the same runtime"" --- hence a question: why JS breaks a valid double.","2021-04-23 00:26:40","","251311","CC BY-SA 4.0"
"118821042","67222143","0","@zerkms there's a difference between a string of decimal digits in UTF-8 and a binary floating point value in internal representation. Creating a UInt8Array with what you have discovered to be the working byte values for the representation, then using the same buffer to back a Float64Array will reveal whether the binary representation for the value ""works"" in JavaScript.","2021-04-23 00:27:38","","182668","CC BY-SA 4.0"
"118821056","67222143","0","@Pointy I checked it already: it does not work. Exactly the same way how the numeric literal does not work: `var buf = new ArrayBuffer(8);
var view = new DataView(buf);
var data = [0x43, 0xD3, 0xDE, 0x58, 0xEE, 0x6F, 0x3D, 0x00];
data.forEach(function (b, i) {
    view.setUint8(i, b);
});

var num = view.getFloat64(0);
console.log(num);` My question is: why it breaks a **valid value**.","2021-04-23 00:28:39","","251311","CC BY-SA 4.0"
"118821058","67222143","0","You can do exactly the same thing as your Go example in JavaScript.","2021-04-23 00:28:51","","182668","CC BY-SA 4.0"
"118821064","67222143","0","I can. And it produces the **wrong** result. The same way like `var a = 5726718050568503296` produces the **wrong** result.","2021-04-23 00:29:22","","251311","CC BY-SA 4.0"
"118821163","67222143","4","Btw, `5726718050568503296 / 0b10011110111100101100011101110011011110011110100` is exactly `65536`, aka `2**16`. isn't just the string representation wrong? What i mean is, the float is correct, but the decimal string isn't.","2021-04-23 00:36:31","","6692606","CC BY-SA 4.0"
"118821202","67222143","0","lol @ASDFGerte indeed if you call `.toPrecision(20)` you get the right answer :)","2021-04-23 00:39:21","","182668","CC BY-SA 4.0"
"118821237","67222143","2","Oof i think i am too tired, i don't know anymore, if i am making some really stupid mistakes, or not. Anyways, writing the number to a typed array, and looking at the bits, it's fully correct.","2021-04-23 00:43:15","","6692606","CC BY-SA 4.0"
"118821292","67222143","0","@ASDFGerte I'm confused, do you agree now the value is representible (in ieee754 double)? :-)","2021-04-23 00:47:39","","251311","CC BY-SA 4.0"
"118821295","67222143","0","@ASDFGerte no you found the actual issue: the default `.toString()` for the value is doing the truncation. The `.toPrecision(20)` (or probably 19) creates a string that shows the correct original value.","2021-04-23 00:48:04","","182668","CC BY-SA 4.0"
"118821296","67222143","3","It is, and javascript represents it correctly, but the default `toString` produces a wrong decimal from it.","2021-04-23 00:48:18","","6692606","CC BY-SA 4.0"
"118821301","67222143","1","Omg, `(5726718050568503296).toFixed()`","2021-04-23 00:48:40","","251311","CC BY-SA 4.0"
"118821303","67222143","1","@ASDFGerte put that as an answer please","2021-04-23 00:48:49","","251311","CC BY-SA 4.0"
"118821369","67222143","0","A lot of `toFixed()` ends up becoming `""5726718050568503296""`, including `(5726718050568503290).toFixed()`","2021-04-23 00:55:36","","184499","CC BY-SA 4.0"
"118821386","67222143","0","@Matt that's right, because not all rational numbers are representible in IEEE754 double space.","2021-04-23 00:56:44","","251311","CC BY-SA 4.0"
"118821395","67222143","0","It's interesting but I cannot see https://tc39.es/ecma262/#sec-numeric-types-number-tostring anything that would explain why `Number::toString()` truncates, hmmmm","2021-04-23 00:57:20","","251311","CC BY-SA 4.0"
"118821425","67222143","1","Thanks, this is unfamiliar territory for me, I've learned a lot in this thread. Fwiw, BigInt's toString() seems to handle it fine `BigInt(5726718050568503296).toString()`","2021-04-23 00:59:14","","184499","CC BY-SA 4.0"
"118821440","67222143","0","It looks like whatever formats the numeric values just assumes there cannot be more than 16 significant digits in a `Number` so it simply nullifies the tail.","2021-04-23 01:01:07","","251311","CC BY-SA 4.0"
"118821467","67222143","2","I started reading that part of the spec as well, but tbh i probably just have to stop now. It's 3am here, and i am dead tired. I can't write a full answer right now, as it takes time to determine, whether the spec simply allows this (most likely), or there is something else afoot. Maybe someone knows, and writes an answer, then i can happily read it after a good night's sleep.","2021-04-23 01:03:41","","6692606","CC BY-SA 4.0"
"118821476","67222143","0","@ASDFGerte thank for your time anyway :-)","2021-04-23 01:04:17","","251311","CC BY-SA 4.0"
"118821565","67222143","0","Another rabbithole would be [BigInt toString source](https://github.com/WebKit/WebKit/blob/8afe31a018b11741abdf9b4d5bb973d7c1d9ff05/Source/JavaScriptCore/runtime/JSBigInt.cpp#L346) vs [Number toString source](https://github.com/WebKit/WebKit/blob/8afe31a018b11741abdf9b4d5bb973d7c1d9ff05/Source/WTF/wtf/dtoa/double-conversion.cc#L48) I guess.","2021-04-23 01:12:22","","184499","CC BY-SA 4.0"
"118821708","67222143","0","@RReverser https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fef6c8987fcb9c84d767e70cdb01d184","2021-04-23 01:24:45","","251311","CC BY-SA 4.0"
"118821780","67222143","1","> It's interesting but I cannot see tc39.es/ecma262/#sec-numeric-types-number-tostring anything that would explain why Number::toString() truncates

You need to look at step 5, which says to choose minimal `k` for stringification that still produces a number equal (in terms of floating number comparisons) to the original.","2021-04-23 01:31:38","","439965","CC BY-SA 4.0"
"118821812","67222143","0","@RReverser yep `5726718050568503296 === 5726718050568503000`, still makes no sense though why deliberately cut precision :-S","2021-04-23 01:33:44","","251311","CC BY-SA 4.0"
"118821830","67222143","0","@zerkms I can only assume, to make sure that `String(a) == String(b)` would still work if `a == b` on the original numbers. That is, it's a matter of normalization.","2021-04-23 01:35:23","","439965","CC BY-SA 4.0"
"120005904","67888049","0","Is the problem that `first_prob` and `last_prob` are too small in the two middle rows? I've run this locally (with a smaller `s` as it takes a very long time) and I get values like 0.72&0.33 for `OrderByRandomNext` and .82&.68 for `OrderByBetterRandomNextDouble`, although they change across runs.","2021-06-08 20:45:05","","2321042","CC BY-SA 4.0"
"120007717","67888049","0","@Andrew - I've provided two implementations of Fisher-Yates - one correct and one bad. The bad one does indeed produce what looks like a parabolic result. You see the parabolic effect clearly after generating 10 million samples.","2021-06-08 22:37:10","","259769","CC BY-SA 4.0"
"120007759","67888049","0","@JonasH - I took the numbers 0 to 99 and then shuffled them. That produces 100 numbers that, in theory, should have an equal chance of appearing in any position. The theoretical average is 49.5. I then compute the average value in each position and I've plotted those.","2021-06-08 22:40:42","","259769","CC BY-SA 4.0"
"120007797","67888049","0","@PeterO. - I've used .Net Framework 4.7.2 and .Net 5.0.6. Both have the same bias.","2021-06-08 22:44:29","","259769","CC BY-SA 4.0"
"120007824","67888049","0","@Andrew - You need to run 10 million or so as the bias doesn't show clearly before then. It's the averaging that removes the bias. The chances of the first and last values, when using `System.Random`, appearing in the normal distribution is represented by the `first_prob` and `last_prob` values. They are both exceedingly unlikely to belong to the standard distribution defined by the internal values of each array.","2021-06-08 22:46:44","","259769","CC BY-SA 4.0"
"120034206","64081701","0","@PatrickDotStar Thanks for the heads up. I haven't gotten that far in the wwdc videos yet.","2021-06-09 19:47:57","","341994","CC BY-SA 4.0"
"120063910","67913756","0","@EmilioPelaez What happens if _you_ do?","2021-06-10 20:14:37","","341994","CC BY-SA 4.0"
"120768289","68332664","0","@Alexander You go ahead; you started it, after all!","2021-07-11 04:17:17","","341994","CC BY-SA 4.0"
"121177325","68505026","0","The Standard's approach of saying that all actions that might make the effects of optimization observable must be categorized as UB makes it impossible to define the behavior of all programs that should behave predictably without blocking useful optimizations.","2021-07-28 20:24:49","","363751","CC BY-SA 4.0"
"121178465","68505026","0","Interesting, @supercat, I don't remember hearing the Standard characterized that way before.  I'll have to think on that for a bit.  In the meantime, do you have any observations about the specific claims discussed in the question?","2021-07-28 21:30:40","","2402272","CC BY-SA 4.0"
"121178631","68505026","0","@JohnBollinger: The logic used here would effectively allow implementations to process almost any program in almost any fashion.  On the other hand, because of the One Program Rule, implementations already have that freedom anyway: if for some implementation there exists some program that exercises the translation limits in N1570 5.2.4.1, and which the implementation processes as mandated by the Standard, nothing the implementation could possibly do with any other Conforming C Program would render the implementation non-conforming.","2021-07-28 21:42:37","","363751","CC BY-SA 4.0"
"121178690","68505026","0","@JohnBollinger: I consider the questions here as being somewhat analogous to the question of whether an equality comparison between two valid pointers can ever yield behavior which would not be consistent with an expression that arbitrarily yields 0 or 1 with no side effects.  I don't think the authors of the Standard intended that to be the case, but the way N1570 6.7.3.1 paragraph 3 is written can be interpreted as allowing comparisons to have wacky side effects, a freedom both clang and gcc exploit.","2021-07-28 21:46:42","","363751","CC BY-SA 4.0"
"121178892","68505026","0","@JohnBollinger: Or as a somewhat more goofy example, consider `int x,y; void *p1=&x; uintptr_t up = (uintptr_t) p1; void *p2 = (void*)up;`, if an implementation were to process integer-to-pointer conversion in a manner such that `p2` would hold `&y`, then the program would have violated the ""shall"" requirement that would forbid pointer-integer-pointer round trips in cases where the result wouldn't compare equal to the original pointer.","2021-07-28 22:00:21","","363751","CC BY-SA 4.0"
"122502195","69309346","1","the mere fact to have two mut ref of the same object that exist is UB, if I recall.","2021-09-24 03:57:57","","7076153","CC BY-SA 4.0"
"122502218","69309346","0","`*unsafe {&mut *j} = 7;` I believe this create a mutable reference","2021-09-24 04:00:51","","7076153","CC BY-SA 4.0"
"122502221","69309346","0","`std::convert::identity(i);  // *Not* a reborrow, a move and drop.` I believe this do nothing not even drop and I don't know if drop would allow what you want","2021-09-24 04:01:33","","7076153","CC BY-SA 4.0"
"122502246","69309346","0","Since rust didn't define clearly its aliasing model I advice to avoid any situation of aliasing where a reference exist.","2021-09-24 04:04:41","","7076153","CC BY-SA 4.0"
"122502247","69309346","0","@Stargateur Yes, two mut refs is undefined behavior. I am asking formally if this is expected to behave with two mut refs, and/or how to drop `i`.","2021-09-24 04:04:50","","87234","CC BY-SA 4.0"
"122502261","69309346","0","@Stargateur I agree Rust is not as formally defined as it ought to be long term, but this is a reduced example from a very tight loop. If I can avoid a branch checking for self-assignment, that's a non-trivial gain. Rust is, ultimately, a systems language - I look forward to some more formal explanations.","2021-09-24 04:05:50","","87234","CC BY-SA 4.0"
"122502295","69309346","0","I would advice to add your true loop here, I can probably find you a good solution, to find a start of answer I don't see any better than ask to https://github.com/RalfJung for example on rust issue github. This is a very very very very complex question.","2021-09-24 04:10:08","","7076153","CC BY-SA 4.0"
"122504785","69309346","0","But even if you `std::convert::identity(i)` or `drop(i)` inside `assign_mixed`, the `i_ref` from `test` still exists, thus assigning through the raw pointer is still UB.","2021-09-24 07:11:42","","865874","CC BY-SA 4.0"
"122505262","69309346","0","@rodrigo The `i_ref` in test is reborrowed. In Rust, there can be many outstanding mut references to the same thing, but only on active at a time. If what you are saying is true, any nested `self.foo()` would be undefined behavior. See also: https://stackoverflow.com/a/45104627/87234","2021-09-24 07:38:12","","87234","CC BY-SA 4.0"
"122505479","69309346","0","@GManNickG: My argument is that the OP wants to create a gap between dropping the reborrow and reactivating the original reference. I don't think that is possible: either you cannot drop the reborrow or the original reference is immediately active, but I don't think you can be in a state where a value is borrowed, but all the borrows are inactive.","2021-09-24 07:48:28","","865874","CC BY-SA 4.0"
"122505557","69309346","0","@rodrigo I agree, that seems to be the model as well. That is, when lowering to LLVM rust implements a `&mut` as a `noalias` pointer directly at the parameter list. Rather than, e.g., passing an (aliasing) pointer in the parameter list, then actually constructing the `&mut` from it - which would scope the noalias to the lifetime of the ref. For ~almost all cases that would match existing behavior, but would allow a mechanism to drop the &mut ref ""down"" to its underlying pointer (which would be safe, given the unique temporal ownership and that the caller won't activate until the call is done).","2021-09-24 07:51:38","","87234","CC BY-SA 4.0"
"122508297","69309346","0","If the problem is that the pointer is treated differently because Rust and LLVM track the fact that it's coming from reference, then you need to find a way to launder the pointer, e.g. by sending its `usize` value to a black box that will return it unchanged. The best way to do that is open to research until Rust implements a stable black-box primitive, but for a quick test, [this seems to work](https://godbolt.org/z/5G14fE1sW). (The laundering technique is stolen from [`black_box`](https://docs.rs/bencher/0.1.5/src/bencher/lib.rs.html#590-596).)","2021-09-24 09:41:44","","1600898","CC BY-SA 4.0"
"123301296","69530502","0","Can this situation be caused by bugs of shouldShowRequestPermissionRationale() ?

https://issuetracker.google.com/issues/202194056

https://issuetracker.google.com/issues/196084857","2021-10-28 14:24:20","","2190250","CC BY-SA 4.0"
"123301668","69530502","0","@Maxdestroyer: Those issues certainly make it seem like Google did not think through `shouldShowRequestPermissionRationale()` with this permission-downgrade scenario. The second link is a bit closer than the first is to my scenario, but neither are an exact match. I hope in the next week or two to try [the solution suggested by Michael](https://stackoverflow.com/questions/69530502/how-can-we-determine-if-we-can-request-location-permission-upgrade-in-android-12?noredirect=1#comment122915022_69530502), which seems promising.","2021-10-28 14:37:39","","115145","CC BY-SA 4.0"
"123601735","68369058","0","sounds pretty much like [Skip tests on CRAN, but run locally](https://stackoverflow.com/questions/36166288/skip-tests-on-cran-but-run-locally), no?","2021-11-11 01:22:38","","9406040","CC BY-SA 4.0"
"123602275","68369058","0","No. I want a switch that makes `devtools::test()` behave **as though it were running on CRAN** ...","2021-11-11 02:13:47","","190277","CC BY-SA 4.0"
"123609995","69530502","0","@CommonsWare did you find any other solution ? or still using what michael suggested ?","2021-11-11 10:41:30","","7378182","CC BY-SA 4.0"
"123697608","69976189","0","@NicolBolas: Currently, concept accepts any type. Idea was to have `operator (T1, T2,.., TN, Ts...)` with fixed `N`. (Concept could be more complex though). I found workaround with only`Ts...` and `requires(sizeof...(Ts) >= N)`, but question remains.","2021-11-15 14:52:07","","2684539","CC BY-SA 4.0"
"105601147","59724711","0","@DavidC.Rankin In 6.2.5/20 it's even said that pointers are always complete types","2020-01-13 23:02:27","","3723423","CC BY-SA 4.0"
"105961345","59918865","5","They are normalized to sum to one","2020-01-26 13:40:23","","2250190","CC BY-SA 4.0"
"105961387","59918865","0","Yes, looking at the output this is what I think as well but couldn't find it anywhere in the documentation.","2020-01-26 13:42:47","","3962914","CC BY-SA 4.0"
"105961411","59918865","0","perhaps the use of ""*probability **weights***"" instead of just *probabilities* in the docs. Seem relevant that **vector of weights** is used not probabilities.","2020-01-26 13:43:50","","2250190","CC BY-SA 4.0"
"105961559","59918865","0","https://www.researchgate.net/post/Hi_there_Is_there_the_value_of_probability_more_than_1","2020-01-26 13:53:48","user10072460","","CC BY-SA 4.0"
"106259484","60079472","0","its been a long time I worked on service(I'm not even pro developer to suggest), but I can suggest you avoid alarmManager for cases like to set alarm below 5 mins, cuz due to android restrictions after a time service running in the backend it gets called after every 5 min or greater not less than 5 mins. Instead, I used Handler. And for running my service continues in the background I referred [https://github.com/fabcira/neverEndingAndroidService]","2020-02-05 16:52:22","","12768925","CC BY-SA 4.0"
"106391111","60114639","1","Oh my God! I thought the problem was connected with my tests somehow. Spent awful lot of time trying to solve this. Such a relief to find out that I'm not the only one facing this issue. Thank you @DebanjanB for creating this question.","2020-02-10 14:39:39","","9544560","CC BY-SA 4.0"
"106393394","60150749","0","@JesperJuhl OP did mention the constructor option and why they don't want to use it in the question.","2020-02-10 15:46:16","","10147399","CC BY-SA 4.0"
"106420243","60150749","0","I was thinking that a union for the last member might help (idea being that default-initialization would go to a type where that is an error but a provided initializer goes to the desired type) but aggregate initialization only ever affects the first union member :(","2020-02-11 12:01:25","","9528746","CC BY-SA 4.0"
"106456233","60150749","0","@Cubic True. Well, maybe in a good workflow you get that.","2020-02-12 11:55:18","","10795151","CC BY-SA 4.0"
"106819435","60286204","0","Can you test the differences between the requests that you receive at the server? Print the http headers, parameters etc. Do you support/use HTTP/2?","2020-02-24 21:36:36","","4448410","CC BY-SA 4.0"
"106882183","60079472","0","Note that getNextAlarmClock() only returns the next AlarmClock, not general PendingIntents you set using `setExact()`. You should either use an AlarmClock or `setExact()` but not both.
Can you be more specific about which ""certain apps"" still have their alarms scheduled? It may be that apps signed with a system certificate don't get killed.","2020-02-26 16:35:05","","2602791","CC BY-SA 4.0"
"106891802","60079472","0","@BladeCoder I was very specific - I gave links. And I already tried ""setExact"" (and of course it was alone), and getNextAlarmClock is the best one for getting the next alarm of the device. It works well as long as you don't remove the app from the recent tasks. The moment you do it, it will show you either nothing or of another app's alarm. You can use any method you wish to see that indeed the alarm doesn't get triggered. I already used logs, toasts and getNextAlarmClock","2020-02-26 22:55:01","","878126","CC BY-SA 4.0"
"106915058","60286204","2","@AsfarIrshad Thank you very much for your help. I found a fix almost by accident, and I posted it below. It had to do with out-of-process hosting mode and a redirect on the server.","2020-02-27 15:29:41","","335858","CC BY-SA 4.0"
"106925682","60442205","0","As fr as I know, you're not allowed to read neither a not a+1.","2020-02-27 21:50:42","","11455384","CC BY-SA 4.0"
"106925714","60442205","2","@Fareanor: You can read `a` for sure (you certainly can't dereference it).","2020-02-27 21:52:34","","2380830","CC BY-SA 4.0"
"106925724","60442205","0","I'm asking this in response to my comment to https://stackoverflow.com/questions/60441437/should-i-free-a-0-size-dynamic-array/60441472#60441472","2020-02-27 21:52:54","","2380830","CC BY-SA 4.0"
"106925730","60442205","0","delete `a` sets `a` to NULL","2020-02-27 21:53:12","","1105805","CC BY-SA 4.0"
"106925738","60442205","9","@RasmiRanjanNayak: That's hogwash.","2020-02-27 21:53:26","","2380830","CC BY-SA 4.0"
"106925757","60442205","2","@RasmiRanjanNayak Oh my ... no","2020-02-27 21:54:04","","7582247","CC BY-SA 4.0"
"106925758","60442205","0","@Bathsheba Oh right I meant ""dereference"" instead of ""read"". My bad.","2020-02-27 21:54:05","","11455384","CC BY-SA 4.0"
"106925838","60442205","0","Since C++ follows the ""you don't get what you don't use/need"" principle, I'm not sure a compiler would set `a` to `nullptr`. But it is only a guess.","2020-02-27 21:57:46","","11455384","CC BY-SA 4.0"
"106925841","60442205","0","I'm struggeling to understand what you mean exactly with ""_read the pointer at `a + 1`_"". Regarding the second question, it seems a decision was made before C++11: https://stackoverflow.com/a/3389428/7582247","2020-02-27 21:58:02","","7582247","CC BY-SA 4.0"
"106925862","60442205","1","@TedLyngmo: When I say ""read the pointer at `a + 1`"", is the following code `auto b = a + 1;` undefined behaviour? (I think it is).","2020-02-27 21:58:56","","2380830","CC BY-SA 4.0"
"106925877","60442205","0","@Bathsheba Ah, ok. I was looking for traps :-)","2020-02-27 21:59:29","","7582247","CC BY-SA 4.0"
"106925969","60442205","0","What is the point of `new int[0]` in the first place?","2020-02-27 22:03:39","","10147399","CC BY-SA 4.0"
"106926013","60442205","0","@Kit.: I'm thinking on those lines too. (And therefore I can't see why `nullptr` can't be a choice for `a`.)","2020-02-27 22:05:38","","2380830","CC BY-SA 4.0"
"106926014","60442205","2","@Ayxan I'd guess in the case where `0` is actually the result of some expression that you won't know until runtime. Since `new int[0]` is safe, it could save you worrying about some branching/special cases. Imagine if I were to initialize an `std::vector` with `std::vector<int> v(0);`.","2020-02-27 22:05:45","","2602718","CC BY-SA 4.0"
"107292552","59557910","1","Question isn't clear enough. It has lack of research and is asking for an algorithm, not a concrete question.","2020-03-11 21:09:45","","2793068","CC BY-SA 4.0"
"107292747","60442205","0","There's no allocated memory at `a + 1`, let alone a pointer.  Did you mean to ask about the value of `a + 1`  ?","2020-03-11 21:17:29","","1505939","CC BY-SA 4.0"
"107292764","60442205","0","@M.M not the object to which `a + 1` may be pointing, but rather the pointer itself.","2020-03-11 21:18:22","","2380830","CC BY-SA 4.0"
"107489548","60565299","0","@Cheticamp What about jadx ? I've tested it online and I think it can handle APK files. It's also open sourced with apache license and it's in Java. Sadly though, I couldn't find how to use it for Android, and I think it also uses a file path, and it has a weird warning on the FAQ about OOM, that has the answer of raising the memory allowed to be quite high... But still, I wonder if it's possible to to try it out. Could be a nice step in the long path to make it work.","2020-03-19 08:46:34","","878126","CC BY-SA 4.0"
"107551411","60565299","0","@Cheticamp So what can be done? You think that maybe jadx could be sufficient? Even if Google would allow to parse APKs when using SAF and file-path (I think they might), I want to know how to do it for InputStream, as I want to parse even APK files that are inside a zip file (or maybe other sources too).","2020-03-21 14:49:41","","878126","CC BY-SA 4.0"
"107572257","60565299","0","@Cheticamp I know it's probably a lot of work, but I thought that maybe the first step that someone has done might help. I'm also ok with third party libraries, if they are both reliable and won't cause issues (example: too high memory usage).","2020-03-22 15:05:14","","878126","CC BY-SA 4.0"
"107890435","60982068","0","@DustinIngram This is just about the region of the stored artifacts.  I don't care where the computing resources are that handle the build, or even how they work.  I'm just running gcloud commands to build and deploy.  I've edited the question to be specific about that.","2020-04-02 02:07:59","","807126","CC BY-SA 4.0"
"107890462","60982068","0","@FernandoRV Yes, this is just about the artifacts.  I see some instructions out there about using yaml files that let you specify a container registry, but this seems like overkill, and there doesn't seem to be any simple gcloud CLI options that talk about how these buckets are managed.","2020-04-02 02:10:07","","807126","CC BY-SA 4.0"
"107890531","60982068","0","Gotcha, sorry I misread!","2020-04-02 02:16:24","","328036","CC BY-SA 4.0"
"108119726","61114929","0","""the current edition of godbolt gcc 9.3 `-std=c++2a` does not have `std::endian`"" https://godbolt.org/z/aRFCps","2020-04-09 06:29:21","","4672588","CC BY-SA 4.0"
"108119850","61114929","2","You could have your build system detect it by attempting to compile a test program that uses `std::endian` and then conditionally defining a preprocessor symbol, but I have a feeling that's not the answer you're looking for.","2020-04-09 06:35:36","","4151599","CC BY-SA 4.0"
"108119937","61114929","0","@cpplearner hmm weird, I did almost exactly the same thing and failed, oh well","2020-04-09 06:39:49","","1505939","CC BY-SA 4.0"
"108120189","61114929","0","I was about to propose a *cough* preprocessor solution that would check for VC++ vs g++ defines. But I suspect you want a universal solution. Ironically, that's what the [reference page](https://en.cppreference.com/w/cpp/types/endian) proposes as an implementation.","2020-04-09 06:51:28","","104458","CC BY-SA 4.0"
"108131667","61114929","1","I do not think you can have `constexpr` and `runtime_detection()` on the same line ;-)","2020-04-09 13:11:05","","10662240","CC BY-SA 4.0"
"108597850","60114639","0","Hi @DebanjanB is this bug fixed?","2020-04-23 13:21:44","","8223874","CC BY-SA 4.0"
"108677155","61429879","0","I'm not the down-voter, but have you considered writing a test harness?","2020-04-26 02:16:43","","506441","CC BY-SA 4.0"
"108832121","61521819","0","@prl: 34.15 of Intel's vol.3 SDM, I think you mean?  https://xem.github.io/minix86/manual/intel-x86-and-64-manual-vol3/o_fe12b1e2a880e0ce-1269.html seems to be describing counting cases where SMM causes or is involved in a VMEXIT, not just any old SMM on ""bare metal"".  (Or the fake bare metal that legacy BIOS booting presents via SMM traps...)  Anyway yeah, if I have time next time I don't mind rebooting my desktop, I might write a 16-bit bootloader and test it on my system...  Or hopefully someone else is feeling keen and tests it for me.","2020-04-30 13:33:54","","224132","CC BY-SA 4.0"
"109267529","61772822","0","[These are](https://github.com/v8/v8/search?q=is+not+a+function+or+its+return+value+is+not+iterable&unscoped_q=is+not+a+function+or+its+return+value+is+not+iterable) the instances of the string in V8. I cannot find the reference to the entry in the string table however.","2020-05-13 12:49:34","","38522","CC BY-SA 4.0"
"109284553","61772822","0","`[...Symbol()]`  will throw the same TypeError, moving here to delete my answer and continue discussion","2020-05-13 20:48:13","","5377773","CC BY-SA 4.0"
"109407250","61841254","1","Just out of curiosity, is the entity array needed? With just flatMap, you will get each entity one at a time as they complete. Entities can be updated as they complete instead of waiting until everything is done.","2020-05-17 18:24:33","","1298400","CC BY-SA 4.0"
"109410355","61841254","1","@JefferyThomas Well, I suppose that depends what you mean by ""needed"". The upstream API returns me an array, and the downstream view controller expects an array. So the endpoints of the pipeline are not exactly up to me, if you see what I mean.","2020-05-17 20:38:28","","341994","CC BY-SA 4.0"
"109435308","61841254","0","@JefferyThomas Also I do not know what you mean by ""with just `flatMap`"". Merely using `flatMap` does not flatten an array.","2020-05-18 15:02:17","","341994","CC BY-SA 4.0"
"110660648","62550828","0","@Holger This is less for sample-based profiling as it is to trap why-is-my-latency-too-high profiles in production using a background thread.","2020-06-25 12:27:48","","57695","CC BY-SA 4.0"
"112376375","63550588","1","And before opening this can of worms, I take it you have considered and rejected other options such as stitching panels together or rescaling data and spoofing the axis labels?","2020-08-23 18:49:17","","12500315","CC BY-SA 4.0"
"112376503","63550588","1","Also, the example at the top works out quite nicely with an added `coord_cartesian(ylim = c(0, 6))`. Presumably the end result is being able to adjust this on a per-panel basis?","2020-08-23 18:56:17","","12500315","CC BY-SA 4.0"
"112376548","63550588","1","Yes, per-panel basis. The example code sets the panels to different y-limits; in of my other uses (outside of this), the difference in y-range is orders-of-magnitude, so there's no reasonable compromise. For your first question, I had considered (and dismissed) it in the past, partly because legacy code was started before `cowplot`/`patchwork` proficiency, partly because there are several other plot aesthetics where merging legends just seems to over-complicate what I thought would be innate to the otherwise easy-to-use faceting.","2020-08-23 18:58:25","","3358272","CC BY-SA 4.0"
"112547689","63646183","0","If I look on [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name), it specifies that if you want to change it, you would need to use `Object.defineProperty`, as it is configurable you could override it that way","2020-08-29 11:14:07","","3231537","CC BY-SA 4.0"
"112548010","63646183","0","@Icepickle Thanks, that's correct (but it won't work for writable non-configurable property). As I noted, the goal is to not solve a coding problem but investigate TS typing issues.","2020-08-29 11:35:53","","3731501","CC BY-SA 4.0"
"112548377","63646183","0","Why does 1 not affect readonly modifier by union type?
`typeof foo & { name: string }` creates an intersection instead of an union `typeof foo | { name: string }`","2020-08-29 11:58:33","","7878090","CC BY-SA 4.0"
"112548505","63646183","0","@NareshPingale Thanks for noticing, fixed the term. I expected it to be an intersection, a union won't work there.","2020-08-29 12:07:48","","3731501","CC BY-SA 4.0"
"112652695","63705739","0","I think you're quite right: by using Google's App Signing service, you are trusting them not to make any malicious changes. That said, even if you do your own signing you're already trusting Google, because they also control the Play Store application that (IIUC) is responsible for verifying app signatures before installation.","2020-09-02 12:44:11","","14637","CC BY-SA 4.0"
"112652963","63705739","0","@Thomas: ""they also control the Play Store application that (IIUC) is responsible for verifying app signatures before installation"" -- that's handled by the OS, not the distribution channel client.","2020-09-02 12:52:04","","115145","CC BY-SA 4.0"
"112653104","63705739","0","Fair enough. In a sense, Google also controls the OS though ;) (Yeah I know it's OSS and the mobile phone carrier is probably the one compiling the binaries that end up on your phone, so they have the last word, but Google still has a fair amount of power here.)","2020-09-02 12:56:10","","14637","CC BY-SA 4.0"
"112653481","63705739","0","@Thomas: ""the mobile phone carrier is probably the one compiling the binaries that end up on your phone"" -- it would be the device manufacturer that does the compiling. For devices built and distributed by a carrier, then the carrier is the manufacturer, but that model is not as common as it once was AFAIK.","2020-09-02 13:07:28","","115145","CC BY-SA 4.0"
"112780995","63778276","0","@HimBromBeere yes it does. Records define properties in a constructor line","2020-09-07 13:17:13","","23528","CC BY-SA 4.0"
"112781321","63778276","0","You could also reproduce your issue with a class instead of a `record`.","2020-09-07 13:28:46","","2528063","CC BY-SA 4.0"
"112781374","63778276","4","@HimBromBeere sure, but this question is going to come up as more people adopt record classes for DTOs. In the case of the class, you have the property explicitly defined where with records it’s combined with a constructor parameter","2020-09-07 13:30:31","","23528","CC BY-SA 4.0"
"112905341","63705739","0","Gotcha. I understood it that way.","2020-09-11 13:49:48","","1131949","CC BY-SA 4.0"
"114630019","64830671","0","Strip the execution bit from it maybe? (it might be using utilities to find execution info about it; you want to treat it as a binary blob)  There are going to be ways to tell beyond compare to look at it as a binary blob, but I don't know them, and that might do it.","2020-11-14 14:32:09","","1774667","CC BY-SA 4.0"
"114630403","64830671","0","@Yakk-AdamNevraumont yes, but at that point it's [basically the same output as what I have](https://i.stack.imgur.com/hjpBq.jpg) via xxd in the question.","2020-11-14 14:58:14","","155423","CC BY-SA 4.0"
"114631553","64830671","0","It sounds like a bug. Considering their toolchain, loader, kernel and pretty much everything else is closed source, I suggest you contact Apple support.","2020-11-14 16:02:33","","9305398","CC BY-SA 4.0"
"114891577","64977541","2","Your GCC is made by the scooby gang.","2020-11-24 12:19:52","","1870760","CC BY-SA 4.0"
"114908325","64977541","2","@Deduplicator there should not be a significant change with C++17 as the mandatory copy elision only apply to RVO, not NRVO.","2020-11-24 22:12:46","","2104697","CC BY-SA 4.0"
"115310451","65224327","0","So, do you currently use any spring cloud dependencies or not? Also, it would be great to see some meaningful things like the whole pom.xml, *.yml files, and config classes.","2020-12-09 20:45:44","","5572007","CC BY-SA 4.0"
"115310529","65224327","0","That's a lot of stuff to post.  I think I've already posted meaning things.  Have you upgraded to Spring Boot 2.4.0?  If not, how will posting the pom help you answer?  I want to hear from folks on the Spring Boot project, but the GitHub issues page recommends that I start here.","2020-12-09 20:48:26","","37213","CC BY-SA 4.0"
"115310537","65224327","3","Spring Cloud Hoxton is not compatible with boot 2.4.x","2020-12-09 20:48:43","","2730527","CC BY-SA 4.0"
"115310562","65224327","0","This app never needed Spring Cloud.  I don't have it in the pom now.  I'm asking if it's necessary b/c the other link talked about it.","2020-12-09 20:49:43","","37213","CC BY-SA 4.0"
"115310733","65224327","0","@duffymo yes, I've already upgraded several projects to 2.4.0 and everything is ok including tests (I think I had some problems only with swagger). The whole pom might be helpful in terms of possible incompatible versions of the dependencies.","2020-12-09 20:56:42","","5572007","CC BY-SA 4.0"
"115311209","65224327","1","Thank you, @amseager.   I'm still not sure I can, because my app uses a bill of materials parent arrangement.  I can tell you that I've reviewed the dependencies to make sure that they're okay with 2.4.0.  I get the idea that I would benefit from talking to you, but I hesitate about posting too much of my employer's code on the web.","2020-12-09 21:16:26","","37213","CC BY-SA 4.0"
"115934716","65463893","0","Hi, i am wondering if you still get the same error on using the stable version of `androidx.security:security-crypt`? instead of alpha, use 1.0.0 just to make sure if it still occurs on that version :)","2021-01-05 03:28:01","","3970630","CC BY-SA 4.0"
"115971152","65463893","1","@Ric17101 I don't see a stable one: https://mvnrepository.com/artifact/androidx.security/security-crypto?repo=google. I think `1.0.0-rc03` is latest of 1.0.0... Even then, when using `1.0.0` or what I've found, `MasterKey` class doesn't exist... It's available only later","2021-01-06 09:54:35","","878126","CC BY-SA 4.0"
"115973787","65463893","0","Then, i think you could use https://developer.android.com/jetpack/androidx/releases/security#security-crypto-1.0.0-rc03 instead. I am being told to not use alpha on production since it may really affect many modules and features on the app.","2021-01-06 11:39:23","","3970630","CC BY-SA 4.0"
"115974793","65463893","0","Again, in this case, the `MasterKey` class doesn't exist.","2021-01-06 12:18:45","","878126","CC BY-SA 4.0"
"116635486","65967690","0","`.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION... ` That does not makes sense. You cannot grand anything. Instead you should be glad that something is granted to you in onActivityResult. Better remove that code.","2021-01-30 12:13:11","","12121419","CC BY-SA 4.0"
"116635506","65967690","0","`I could grant SAF access to this specific folder ?` Wrong. You cannot grand saf anything. Instead be glad saf grands you access.","2021-01-30 12:14:29","","12121419","CC BY-SA 4.0"
"116635649","65967690","0","Quote: The app achieves that by targeting Android 10, which allows it to temporarily opt-out of scoped storage.","2021-01-30 12:23:19","","12121419","CC BY-SA 4.0"
"116635717","65967690","0","The flag is mentioned on the docs too, so it shouldn't be removed: https://developer.android.com/training/data-storage/shared/documents-files . About ""I could request"", read the entire sentence, as I wrote about doing it via adb/root. As for the "" temporarily opt-out"" on the article, I don't think this is correct, as it's about the storage permission, not necessary about ""Android"" folder. Besides, my POC is also targetting API 29, so it still doesn't explain how it's done.","2021-01-30 12:28:28","","878126","CC BY-SA 4.0"
"116714904","66013007","3","Maybe the compiler (the static analyzer of it) is just not ""trained"" to interpret the `\0` inside string literals? It does not have to have a full format string interpreter.","2021-02-02 15:58:16","","4253229","CC BY-SA 4.0"
"116714910","66013007","0","I would say it doesn't work, for the reason you state.","2021-02-02 15:58:25","","3923896","CC BY-SA 4.0"
"116715435","66013007","3","What C library? glibc? Most probably when `]` is missing, it continues parsing. Still, it's your fault - [it's ub](https://port70.net/~nsz/c/c11/n1570.html#7.21.6.2p13). I get `x = 0, buf=` and it checks out with [glibc code](https://code.woboq.org/userspace/glibc/stdio-common/vfscanf-internal.c.html#2537).","2021-02-02 16:14:57","","9072753","CC BY-SA 4.0"
"116822907","66075419","1","`List<? extends List<Number>>` means, it could be a `List<ArrayList<Number>>` or a `List<LinkedList<Number>>`. But not a `List<List<Double>>`.","2021-02-06 10:20:18","","845414","CC BY-SA 4.0"
"116893253","65967690","0","@Cheticamp I see. Why did he mention ""root/data/media/0/Android/data"" though? What is this?","2021-02-09 09:55:58","","878126","CC BY-SA 4.0"
"117127515","65967690","0","https://developer.android.com/about/versions/11/privacy/storage","2021-02-17 21:26:48","","6368461","CC BY-SA 4.0"
"117128818","65967690","0","@AbdelrahmanFarag Please read the question. Some apps succeeded getting there.","2021-02-17 22:29:22","","878126","CC BY-SA 4.0"
"117515999","65224327","0","please use <spring-cloud.version>2020.0.1</spring-cloud.version>","2021-03-04 11:27:40","","7153895","CC BY-SA 4.0"
"117556163","66497269","8","*""my type doesn't define operator<=> nor operator==""* - but `std::string` does, making it a candidate due to the drived-to-base conversion. I believe *all* standard library types that support comparison had their members overhauled.","2021-03-05 17:59:54","","817643","CC BY-SA 4.0"
"117556259","66497269","8","I guess non-virtual destructors are no longer the sole compelling reason to avoid inheriting from standard library containers :/","2021-03-05 18:04:45","","817643","CC BY-SA 4.0"
"117573807","66497269","0","Wouldn't the best way to implement case insensitiive strings be through a new type_traits<> ??","2021-03-06 16:43:13","","2430669","CC BY-SA 4.0"
"117594072","66497269","0","@MichaëlRoy: You mean `char_traits`, but, absolutely not. The _right_ way to implement a case-insensitive string is to just write `class CaseInsensitiveString` — there's no reason for it to be a specialization of `std::basic_string` at all. The second-best way would be to implement a trivial `class CaseInsensitiveChar` with appropriate `operator==` and then use `std::basic_string<CaseInsensitiveChar>`; but the second-best way doesn't work with Unicode, so, you should forget it and just use the first best way.","2021-03-07 18:31:04","","1424877","CC BY-SA 4.0"
"117721672","66593425","0","In MSVC, it compiles and runs, though Intellisense complains: `Supercalifragilisticexpialidocious::Frob::Baz is not a class member`.","2021-03-12 03:11:17","","421178","CC BY-SA 4.0"
"117721698","66593425","0","@Casey I get the same in my gcc IDE -- which is because the IDE uses clang for intellisense","2021-03-12 03:13:47","","1505939","CC BY-SA 4.0"
"117721744","66593425","0","Yeah, I tend to ignore intellisense and only listen to the compiler. There were cases where MSVC's compiler team implemented newer features but the intellisense team didn't so it complained, but your code still worked.","2021-03-12 03:17:15","","421178","CC BY-SA 4.0"
"117721761","66593425","0","In any case, `decltype` seems an appropriate workaround for not having to type a long typename. I use it in other contexts a lot because lazy.","2021-03-12 03:18:40","","421178","CC BY-SA 4.0"
"117721772","66593425","0","In my real code `g` is actually a reference so the decltype workaround doesn't help","2021-03-12 03:19:33","","1505939","CC BY-SA 4.0"
"117721782","66593425","0","Can you put an example of that in your question?","2021-03-12 03:20:09","","421178","CC BY-SA 4.0"
"117721788","66593425","0","I decided to stick to 1 question per question ... will post a follow-up depending on how this one is answered.  (But just go `auto& h = g;` and try to do it on `h`)","2021-03-12 03:20:44","","1505939","CC BY-SA 4.0"
"117721847","66593425","0","`std::remove_reference_t<decltype(h)>::Frob::Baz` works","2021-03-12 03:27:55","","421178","CC BY-SA 4.0"
"117721873","66593425","0","@Casey The cure is nearly worse than the problem","2021-03-12 03:30:28","","1505939","CC BY-SA 4.0"
"117721985","66593425","0","Although, if your class name is actually that long, you have some design issues you should look in to. :P","2021-03-12 03:41:44","","421178","CC BY-SA 4.0"
"118243314","66843397","0","You are using ""Firebase"" synonymous to ""Firebase Realtime Database"". I know this used to be accurate - I am wondering: does this still make sense today?","2021-03-31 17:12:42","","6509751","CC BY-SA 4.0"
"118244782","66843397","0","I tagged with `firebase-realtime-database`. ¯\_(ツ)_/¯
I posted this Q&A because I literally had just implemented such a countdown timer in an app, and realized others might benefit from it. If you have an alternative answer that you think is more relevant today, please post it below.","2021-03-31 18:08:47","","209103","CC BY-SA 4.0"
"118387534","66924519","0","If `barWidget ` depends on `node_modules` there's obviously no way considering a `vendor` cache group defined. Generally it's hard to say anything without minimal reproducible test case","2021-04-06 19:19:31","","718630","CC BY-SA 4.0"
"118430461","66924519","0","maybe specifying a different chunk name on the barWidget imports with the comments annotations would help. see https://webpack.js.org/api/module-methods/#magic-comments","2021-04-08 08:27:12","","4023734","CC BY-SA 4.0"
"118573611","67081496","0","`data %>% mutate(x = str_replace_all(x, setNames(lookup$new, lookup$old)))` is certainly less efficient than the matching and join, however, I'm not sure whether it's `wildly inefficient` with decent sized datasets.","2021-04-13 20:38:47","","5964557","CC BY-SA 4.0"
"118575802","67081496","1","Well, to be safe you'd need to use something like `sprintf(""^%s$"", lookup$new)` as the pattern, and even then I'd have concerns about regex special characters in the old names. I'm biased from an old project I used to work on where regex was a performance bottleneck (quite complex regex, mostly), but I definitely have a pet peeve about using regex for exact whole string matches. But on 100k rows my guess is `str_replace_all` will be at least 10x slower than most of these other solutions.","2021-04-13 22:52:20","","903061","CC BY-SA 4.0"
"118832137","67222143","0","@Pointy: The specification of `Number.MAX_SAFE_INTEGER` is it is the largest integer n such that n and n+1 are both exactly representable as a `Number` value, per 20.1.2.6 in ECMAScript 2020 Language Specification. (JavaScript is an implementation of ECMAScript.) This specification implies n+2 is not representable as a `Number` but says nothing about larger integers; they may or may not be representable. Whether the name is ridiculous or not is irrelevant; the text of the specification is what governs.","2021-04-23 11:21:17","","298225","CC BY-SA 4.0"
"118832188","67222143","0","@Barmar: IEEE-754 binary64 has 53 bits in the significand (52 encoded in the primary significand field, 1 encoded by way of the exponent field). The number of decimal digits is not particularly relevant; 5,726,718,050,568,503,296 has only 45 significant bits, so it is representable in binary64 regardless of the number of decimal digits needed to display it.","2021-04-23 11:23:27","","298225","CC BY-SA 4.0"
"118832231","67222143","0","@ASDFGerte: The significand (which is the preferred name; “mantissa” is an old word for the fraction portion of a logarithm) of an IEEE-754 binary64 is 53 bits, not 52. The primary field used to encode it is 52 bits, but the encoding is not the value. The full value is formed from those 52 bits plus another bits encoded by way of the exponent. The **actual** significand is 53 bits, and one should avoid thinking of the 52 bits alone as the significand.","2021-04-23 11:25:09","","298225","CC BY-SA 4.0"
"118832287","67222143","0","@Pointy: Re “this number definitely requires more mantissa bits”: No, this number is 1.0011110111100101100011101110011011110011•2^62, and that is only 45 bits in the significand.","2021-04-23 11:27:28","","298225","CC BY-SA 4.0"
"118833065","67222143","1","@Pointy: Re “something has to read the textual representation of the value and perform a series of multiplications and additions in order to create the internal 64-bit floating point value. If along the way there's an unrepresentable intermediate value, you can't end up with the final correct value”: This cannot happen in a conforming JavaScript implementation. Clause 11.8.3.2 of ECMAScript 2020 Language Specification requires correct rounding for numerals with fewer than 21 digits. This number has 19.","2021-04-23 11:58:51","","298225","CC BY-SA 4.0"
"120019896","67888049","0","Do you think the problem is actually in `Random` or the fact that you're not matching the expectations of `OrderBy`?","2021-06-09 10:57:34","","15498","CC BY-SA 4.0"
"120039337","67913756","0","Just in case you think maybe `Thread.isMainThread` is mistaken somehow, it isn't. I know because if I speak of `self.view.bounds` within `test` before the `await`, I crash in the main thread checker, but if I speak of it after the `await`, I don't crash. We really are context switching here, and I don't know why.","2021-06-10 02:20:57","","341994","CC BY-SA 4.0"
"120050497","67913756","0","What happens if you call another async method that is not a MainActor?","2021-06-10 11:51:17","","725628","CC BY-SA 4.0"
"120767386","68332664","3","This sounds like a question for @Hamish","2021-07-11 01:39:06","","3141234","CC BY-SA 4.0"
"120767393","68332664","0","@Alexander Oh good, I'm glad you found this, I was going to blip you via the other question. I'm mighty confused at this point.","2021-07-11 01:40:27","","341994","CC BY-SA 4.0"
"120767853","68332664","0","Care to post about this on the Swift Forums? If you do, link it here please!","2021-07-11 03:04:44","","3141234","CC BY-SA 4.0"
"121669854","64081701","0","Just submitted FB9534050 to Apple. The default behaviour should definitely not be to crash","2021-08-19 09:40:55","","1652402","CC BY-SA 4.0"
"122289933","59869486","2","This question is different from the ""duplicate"". I was looking for THIS question, not the other. Thanks @Holger, for the answer.","2021-09-15 09:15:12","","1121497","CC BY-SA 4.0"
"124081850","70042442","0","I guess you are saying the standard did not make it explicit how to recursively apply the grammar for multiple `*`s.","2021-12-01 23:26:40","","315052","CC BY-SA 4.0"
"124134444","70042442","0","@tstanisl: **T** cannot be `int * const`. It comes from the *declaration-specifiers* part of the declaration, which can have only storage class specifiers, type specifiers, type qualifiers, function specifiers (`inline` and `_Noreturn`), and alignment specifiers. The pointer token, `*`, is not a part of it.","2021-12-04 01:05:50","","298225","CC BY-SA 4.0"
"105286563","59557910","1","Is your signal a pure sinusoid or does it contain other noise (like in Eli Billauer’s case)?","2020-01-02 06:42:59","","2431885","CC BY-SA 4.0"
"105286602","59557910","1","@Jean-Paul I'm interested in both cases... I want to use this in a couple of different applications, actually.","2020-01-02 06:45:31","","366904","CC BY-SA 4.0"
"105401278","59618213","0","The Lisp term for this utility is [gensym](http://clhs.lisp.se/Body/f_gensym.htm), and apparently there is at least one [crate for that](https://crates.io/crates/gensym). However the [implementation](https://docs.rs/gensym/0.1.0/src/gensym/lib.rs.html#34-43) is exactly the same as in French's answer.","2020-01-06 21:03:16","","1600898","CC BY-SA 4.0"
"105600365","59724711","0","6.2.5(p22) help? (or does it add more confusion allowing the incomplete type to be completed by later declaration?)","2020-01-13 22:17:11","","3422102","CC BY-SA 4.0"
"105718456","59787879","0","[See for yourself on godbolt](https://godbolt.org/z/cRGJ-k)","2020-01-17 13:04:34","","3087601","CC BY-SA 4.0"
"106261858","60079472","0","I know you cannot start activity from background in android Q, but it does not look like its your case.","2020-02-05 18:16:29","","471160","CC BY-SA 4.0"
"106278278","60079472","0","From what I remember from the docs I was reading while setting up some bg tasks to execute without using the alarm manager but using [WorkManager](https://developer.android.com/guide/background#workmanager) the minimum time for intervals was 15min","2020-02-06 09:04:10","","2911633","CC BY-SA 4.0"
"106278829","60079472","0","@IgorIlic So how come other alarm clock apps work? I've provided both Google Clock example and a third party app, both can have 2 alarms, one minute after another...","2020-02-06 09:22:19","","878126","CC BY-SA 4.0"
"106335954","60114639","9","I'm getting the same issue once we upgraded to v80.  Though, your question should probably ask how to fix it, rather than asking if anyone else is facing the same problem.","2020-02-07 23:13:55","","1586174","CC BY-SA 4.0"
"106379153","60114639","0","@DebanjanB You can try my solution whenever you are free.","2020-02-10 08:25:34","","10091597","CC BY-SA 4.0"
"106549499","60127747","1","I was looking at this particular answer and its comment: https://stackoverflow.com/a/16929175/10678955","2020-02-15 09:39:41","","10678955","CC BY-SA 4.0"
"106600498","60127747","0","@root: That seems plausible, and I might accept it if somebody enters such an answer here, if nothing more definitive is submitted. I have a PDP-11 handbook here, and the index does show exceptions only for the floating-point processor.","2020-02-17 15:43:29","","298225","CC BY-SA 4.0"
"106769166","60286204","0","Strange. Maybe try Settings > Safari > Clear History and Website Data? I’m wondering if it’s something to do with different cache behaviours between cellular and wifi.","2020-02-22 21:17:32","","5606659","CC BY-SA 4.0"
"106769857","60286204","0","@PeterParker I did fresh install of Chrome and Opera, which I never had on my phone before. Unfortunately, I did not have any luck with that.","2020-02-22 22:05:09","","335858","CC BY-SA 4.0"
"106927723","60442205","0","Really, there is nothing special about how `new` works with a zero sized array relative to a non-zero sized array. How you handle it is basically homogeneous with how you handle any other dynamic array allocations. Edit : I'll admit it feels strange that `a` is both a pointer to the start of the array *and* a one-past-the-end pointer, but that happens with any empty range, like `begin()` and `end()` of an empty container.","2020-02-27 23:43:23","","7359094","CC BY-SA 4.0"
"107356175","60114639","0","@DebanjanB - I have ChromeDriver 80.0.3987.106. I still face the issue. But, my automation scripts are working fine.","2020-03-14 00:37:04","","6648326","CC BY-SA 4.0"
"107372002","60565299","0","I think that some of the manifests are obfuscated by DexGuard (see [here](https://www.guardsquare.com/en/blog/dexguard-vs-proguard)) where manifest file obfuscation is mentioned. This seems to be the case for #1 on your list, com.farproc.wifi.analyzer. Its manifest file starts with ""<mnfs"" instead of ""<manifest"" and so do another 20 or so apps on my phone.","2020-03-14 21:37:39","","6287910","CC BY-SA 4.0"
"107482112","60565299","0","What doesn't work with [apk-parser](https://github.com/hsiafan/apk-parser)? I was able to run it on an emulator and it worked OK. Would it be required to accept an InputStream?","2020-03-19 00:03:46","","6287910","CC BY-SA 4.0"
"107482734","60565299","0","@Cheticamp  I already provided a link to this library, and said that it supports only file-path and not InputStream. This means it can't parse files from SAF well, and can't parse APK files that are inside zip files. Not only that, but sadly this library has issues parsing even normal APK sometimes: https://github.com/hsiafan/apk-parser/issues","2020-03-19 00:55:31","","878126","CC BY-SA 4.0"
"107510042","60565299","0","I learned today that _ZipInputStream_ can't always unzip a file for several reasons identified [here](https://stackoverflow.com/a/54236244/6287910). What I saw was ""java.util.zip.ZipException: only DEFLATED entries can have EXT descriptor"" on one APK but the remaining 430 APKs were OK. Out of curiosity, I tried a test of the relative speed of extracting and parsing manifests on my S7 with 431 APKs: Extract using ZipFile (no copying): 65 seconds; extract by copying input stream to local file then using ZipFile: 285 secs; Extract using ZipInputStream without copying: 285 secs. I used apk-parser.","2020-03-19 21:07:35","","6287910","CC BY-SA 4.0"
"107524435","60565299","0","The only APK I had trouble unpacking was FireFox (org.mozilla.firefox). I only noted the issue because I thought that it was a structural issue, i.e., that unzipping couldn't be done reliably with a sequential read. As you say, other libs might handle sequential reads just fine.","2020-03-20 11:43:08","","6287910","CC BY-SA 4.0"
"107524461","60565299","0","As for the tests, I was curious about the penalty that sequential reads would impose. I didn't mention a final test I did which was to use the code I posted here instead of apk-parser using ZipInputStream. Running code resulted in  scan time of 83 seconds which compares favorably with ZipFile. What the code doesn't do is to read the _resources.arsc_ file which is required for a full parse and which tends to be at the very end of APKs. When running this parser while just reading the _resources.arsc_ file, the run time is 979 seconds.","2020-03-20 11:44:07","","6287910","CC BY-SA 4.0"
"108122943","61114929","0","I'm thinking about name lookup tricks. `using namespace std;` will allow unqualified `endian` to find `std::endian` if that exists. If not, `endian` is looked up in the surrounding namespace.","2020-04-09 08:30:02","","15416","CC BY-SA 4.0"
"108123329","61114929","0","@MSalters I haven't been able to get anything along those lines to work yet , e.g. https://godbolt.org/z/9uuaEL","2020-04-09 08:42:53","","1505939","CC BY-SA 4.0"
"108182743","61151278","1","Thanks for explaining, if I'm not mistaken, the compiler decides the scope of the ""using' statement in C# 8 based on the last usage of the disposable instance. I'm guessing with the pattern you explained, you want to do something (E.g., logging the execution) when the instance is disposed. I think with what you are proposing, the compiler supposed to dispose the instance when the method block ends. I don't think there is a way to do that in C# 8. It can be a good new feature for C# 9!","2020-04-11 02:53:21","","2045559","CC BY-SA 4.0"
"108182969","61151278","2","@Saeid - ""The lifetime of a `using` local will extend to the end of the scope in which it is declared."" - That's the current C# 8 implementation. No need to wait for C# 9.","2020-04-11 03:16:36","","259769","CC BY-SA 4.0"
"108182996","61151278","0","If you don't have a variable you can't interact with the resource you obtained.  The only thing you could do is have side effects that note starting and stopping.  If you're going to log I would think you want to note success or failure.","2020-04-11 03:20:31","","10659","CC BY-SA 4.0"
"108207650","61151278","0","In ‘using var _ = ...;’ there is no local being declared. It is a discard. Try accessing it (with ‘_.ToString();’) for example, you will quickly confirm that. Update: I stand corrected. This is a bug. Will file shortly","2020-04-12 03:21:52","","172315","CC BY-SA 4.0"
"108207702","61151278","1","Filed https://github.com/dotnet/roslyn/issues/43292 . Thanks for finding this issue!","2020-04-12 03:28:14","","172315","CC BY-SA 4.0"
"108207723","61151278","0","@JulienCouvreur no problem. i really wish i didnt have to use a discard at all.","2020-04-12 03:30:35","","23528","CC BY-SA 4.0"
"108215796","60114639","2","Still fails with ChromeDriver + Chrome 81. And workaround also doesn't work since ChromeDriver 79 is not compatible with Chrome 81.","2020-04-12 12:23:26","","4736732","CC BY-SA 4.0"
"108238278","61177302","0","Well even `assignable_from` requires `common_reference` ...","2020-04-13 08:13:24","","4672588","CC BY-SA 4.0"
"108820744","61517878","0","Shouldnt that be `np.argsort(-arr, kind='mergesort')[:,:N]`?","2020-04-30 07:20:27","","3293881","CC BY-SA 4.0"
"108820796","61517878","0","Yeah the argsort gives us the top N indices in the order. So, slicing is needed. Then. use it to create a mask, I would say.","2020-04-30 07:22:16","","3293881","CC BY-SA 4.0"
"109470866","61841254","0","@JefferyThomas I am using both MergeMany and collect, as I have explained (and see the link). I receive an array at the beginning of the pipeline, and I have to produce an array at the end of the pipeline.","2020-05-19 14:01:39","","341994","CC BY-SA 4.0"
"109980229","62184501","0","My guess is that the inner loop of `slice()` is checking for getter/setter methods.","2020-06-04 00:18:27","","1491895","CC BY-SA 4.0"
"109980357","62184501","0","@Barmar - Is there a reason, `.slice()` would have to do more work than the manual assignment loop?","2020-06-04 00:27:44","","816620","CC BY-SA 4.0"
"109980373","62184501","0","There's probably an optimization being done for the array indexing that isn't happening inside slice.","2020-06-04 00:29:06","","1491895","CC BY-SA 4.0"
"109980715","62184501","0","The V8 code [here](https://github.com/v8/v8/blob/master/src/builtins/array-slice.tq) makes reference to `FastSlice()`, but is beyond what I can follow.","2020-06-04 00:55:17","","816620","CC BY-SA 4.0"
"109980817","62184501","0","Any difference when swapping the order to `[ArraySub, Array]`?","2020-06-04 01:02:46","","707111","CC BY-SA 4.0"
"109980828","62184501","0","Just to throw out there an alternative that should outperform both: `Object.values(source)`","2020-06-04 01:03:40","","120242","CC BY-SA 4.0"
"109980865","62184501","0","@Ry - I don't see any meaningful difference with the order.  I also ran 5 different lengths for each class with the 100_000_000 being last for each.  Got same results if I switch `ArraySub` to be first instead of last.","2020-06-04 01:06:12","","816620","CC BY-SA 4.0"
"109980924","62184501","1","Perhaps the subclass elements are being treated as individual object key/value entries while the array entries are being treated as one piece of contiguous memory.","2020-06-04 01:10:29","","356887","CC BY-SA 4.0"
"109981007","62184501","0","repl.it so you guys can test for yourselves if you don't have nodejs locally https://repl.it/repls/SvelteDeadlyGlueware  I think @xdhmoore is probably right; optimizations for underlying flat array probably can't be used when using the subclass and `this`.","2020-06-04 01:16:46","","120242","CC BY-SA 4.0"
"109981053","62184501","0","@user120242 - But, none of that explains why `.slice()` on the subclass is substantially SLOWER than just a manual one-by-one copy of each value from one array to another.  You can re-implment `.slice()` in plain Javascript and it will be faster than the built-in implmentation (when operating on a sub-class).  Something seems wrong there.","2020-06-04 01:19:40","","816620","CC BY-SA 4.0"
"109981076","62184501","0","JavaScript does some JIT optimization of array indexing and property accesses. These optimizations are presumably not being done inside the slice() method.","2020-06-04 01:21:13","","1491895","CC BY-SA 4.0"
"110522898","62494522","1","Given that an `Instant` has no time zone, does it matter which it uses?","2020-06-21 07:40:35","","3788176","CC BY-SA 4.0"
"110956578","62738704","0","Though not an answer, note: `prc = Proc.new do; def self.foo; 123; end; foo; end; prc.call #=> 123`.","2020-07-05 17:33:58","","256970","CC BY-SA 4.0"
"110956726","62738704","0","Also, `def foo; 123; end; prc = method(:foo).to_proc; prc.call => 123`.","2020-07-05 17:41:28","","256970","CC BY-SA 4.0"
"110957955","62738704","0","@CarySwoveland but those `foo` aren’t methods of `prc`, are they?","2020-07-05 18:44:18","","477037","CC BY-SA 4.0"
"110958430","62738704","0","Hmm. 1st: `prc.methods.include?(:foo) #=> false`. 2nd:  `prc.method(:foo).owner #=> Object`.","2020-07-05 19:04:26","","256970","CC BY-SA 4.0"
"111440504","63017136","0","@PavelAnikhouski Are you definitely running an x86 build?","2020-07-21 16:05:49","","106159","CC BY-SA 4.0"
"111440791","63017136","0","@MatthewWatson yes, just double-checked. The difference is pretty small, about 3-5 milliseconds","2020-07-21 16:15:09","","4728685","CC BY-SA 4.0"
"111440869","63017136","4","No repro, I see .NETCore faster.  A simple explanation is that you have an older processor that has no AVX2 support yet. Do realize what you're chasing.  The inner loop is executed a billion times, tells us that you have a 3.6 GHz processor and are trying to find a difference of **one** cpu instruction.  That's quite hard to do.  The job that the jitter optimizer is critical.  As-is the test is invalid, it can't do that job reliably when you mix the testing code with the real code.","2020-07-21 16:17:31","","17034","CC BY-SA 4.0"
"111440981","63017136","3","Fwiw, the most obvious way to make the code fast is to use Math.Abs() to fill window[] so the if-statement is no longer necessary.","2020-07-21 16:21:10","","17034","CC BY-SA 4.0"
"112902226","63705739","0","Not an answer to your question as such, but google doesn't need to modify your code. The Android system itself ""knows"" what your app is doing and can do all it needs without modifying your files.","2020-09-11 12:09:23","","1131949","CC BY-SA 4.0"
"112902849","63705739","1","@CaptainKenpachi: For the purposes of this question, I am not really concerned about other attack vectors, just this one.","2020-09-11 12:28:35","","115145","CC BY-SA 4.0"
"113130664","63646183","0","Even if you do `foo.name = 'not foo';` `foo.name` will still print ""foo"" so what's the goal here?","2020-09-20 07:58:22","","6727914","CC BY-SA 4.0"
"114623079","64830671","0","So, you are running an x86 compiler using an emulated x86 environment on a arm64 ""apple silicon"" macos system, telling it to compile your program targetting arm64.  Then running it on arm64, and it fails.","2020-11-14 03:39:50","","1774667","CC BY-SA 4.0"
"114623144","64830671","0","Have you done a bin diff of the working and not binaries?  There might be something obvious from that.","2020-11-14 03:47:42","","1774667","CC BY-SA 4.0"
"114623208","64830671","0","@Yakk-AdamNevraumont that sounds correct. I also attempted to remove one of those steps (the emulation via Rosetta 2) by compiling on an x86_64 machine and the code does run.","2020-11-14 03:57:15","","155423","CC BY-SA 4.0"
"114623217","64830671","0","@Yakk-AdamNevraumont I don't have any prior experience with useful binary diff tools other than `xxd` + `diff`. Do you have any capable tools that you'd recommend?","2020-11-14 03:58:29","","155423","CC BY-SA 4.0"
"114623282","64830671","0","Try beyond compare?  They have a free trial (check if you qualify).  The hope would be it would be obvious somehow (like, wrong instruction set, or wrong name for main, or something even tinier).  In theory the different toolchain arm64 binaries should be nearly identical after all.","2020-11-14 04:09:46","","1774667","CC BY-SA 4.0"
"115319517","65224327","0","Please add the full stacktrace instead of a snippet. That will include the class that is the actual culprit trying to instantatie/needing that class. If it is really a Spring Cloud class (pulled in by some other dependency) you cannot upgrade as there is currently no Spring Cloud version compatible with Spring Boot 2.4.","2020-12-10 07:01:50","","2696260","CC BY-SA 4.0"
"116010225","65614890","0","Mostly to allow every type to have its own annotations declared. Isn't it?","2021-01-07 15:37:47","","1746118","CC BY-SA 4.0"
"116010994","65614890","0","@Naman It seems something like that though the type is `A.My.Builder`","2021-01-07 16:05:01","","57695","CC BY-SA 4.0"
"116344262","65224327","0","Facing same issue post upgrade to 2.4.2
<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
	</parent>
https://github.com/spring-cloud/spring-cloud-config/issues/1543","2021-01-20 04:36:38","","1263837","CC BY-SA 4.0"
"116877065","66075419","1","@Eugene reminds me on the second half of [this answer](https://stackoverflow.com/a/48347198/2711488) which is about assignments (without casts), but still a similar (or even the same) unsoundness.","2021-02-08 18:15:24","","2711488","CC BY-SA 4.0"
"116877674","65967690","2","Have you seen [this](https://issuetracker.google.com/issues/178910699) bug report? It has some references to a discussion on the GitHub repository for [Amaze File Manager](https://github.com/TeamAmaze/AmazeFileManager) that may be of interest to you.","2021-02-08 18:42:14","","6287910","CC BY-SA 4.0"
"116879834","65967690","0","@Cheticamp Thank you. The app you've presented doesn't seem to do it. But the bug report shows what I've found. So you think it's some loophole? Somehow Total Commander app can also reach there (though it's a bit uncomfortable to do so).","2021-02-08 20:15:54","","878126","CC BY-SA 4.0"
"116880104","65967690","0","I think the intent is pretty clear to restrict access to those Android folders, so it looks like a loophole to me. It will be interesting to see the response to the bug report. I hope, as I am sure many, many others do, that there is some legal way for the user to permit access.","2021-02-08 20:26:35","","6287910","CC BY-SA 4.0"
"116895845","65967690","0","I think that he is saying that those two paths point to the same place. Don't know specifically about ""root/data/media/0/Android/data"" though.","2021-02-09 11:36:05","","6287910","CC BY-SA 4.0"
"117348495","65967690","0","@blackapps I actually got it somehow (check updated question), but as I wrote, this isn't enough, because I want real access to it, like those apps do. I've updated the question to explain it better. Now this part is in question 1, because it's of the same thing.","2021-02-25 22:00:58","","878126","CC BY-SA 4.0"
"117565083","66497269","1","@StoryTeller-UnslanderMonica: ""Never has been."" https://quuxplusone.github.io/blog/2018/12/11/dont-inherit-from-std-types/","2021-03-06 05:42:42","","1424877","CC BY-SA 4.0"
"118409922","66924519","0","@Andrey Yes, the reason vendor chunk appears is that node_modules is being used, this would be true for virtually any app. I believe the thing that the thing that the question describes is natural to Webpack and can be reproduced with any setup that has initial chunks. But I'll try to add an example that shows this.","2021-04-07 14:19:05","","3731501","CC BY-SA 4.0"
"118415756","66924519","0","For the `barWidget ` entry, if `barWidget.js ` imports anything from `node_modules `, then vendor chunk will be created. Or if some other code is including something from `node_modules` (i.e. something from webpack config). It's likely that ""vendor"" chunk won't be created if nothing needs it for the entry, but it looks like that's not the case, so you need to find why code from `node_modules` is needed for the `barWidget`  entry","2021-04-07 17:46:59","","718630","CC BY-SA 4.0"
"119520708","67619477","0","@Answerers, feel free to remove the language-lawyer tag.","2021-05-20 11:33:26","","2380830","CC BY-SA 4.0"
"119520710","67619477","0","No; the parentheses isolate the sequences. (And the sequences you've got do nothing but reinforce the defined behavior portion).","2021-05-20 11:33:29","","2183547","CC BY-SA 4.0"
"119520971","67619477","2","We agree that such code should never be written, even if it is defined behaviour.","2021-05-20 11:43:30","","898348","CC BY-SA 4.0"
"119520977","67619477","0","@Jabberwocky Well especially if the behaviour is undefined ;-)","2021-05-20 11:43:47","","2380830","CC BY-SA 4.0"
"119521031","67619477","1","The comma operator has exactly 3 uses: - icky function-like macros that return a value - sequence point language lawyer debates - code golf.","2021-05-20 11:45:54","","584518","CC BY-SA 4.0"
"119521436","67619477","0","@Bathsheba In this case I would say that it's equally bad if the behavior is defined or not. :)","2021-05-20 12:00:51","","6699433","CC BY-SA 4.0"
"119681028","63237657","2","I am amazed that being forced to give up signing authority does not lead to major protests in the community. IMO this is a big deal! Do you think it would be a good idea to open a feature request or possibly even a bug report in the issue tracker? What else could be done?","2021-05-26 17:23:55","","773189","CC BY-SA 4.0"
"119681702","63237657","2","@devconsole: Google is aware of the community's concerns, as a fair number of developers have contacted them regarding this issue. My impression is that while they are not going to back down on the App Signing requirement for App Bundles, they are interested in addressing some of the tampering concerns that I outlined [a month after I posted this question](https://commonsware.com/blog/2020/09/23/uncomfortable-questions-app-signing.html).","2021-05-26 17:50:37","","115145","CC BY-SA 4.0"
"120031336","67888049","1","Good question! As noted in the given answer, there are a lot of sources of bias in the default implementation of `Random`. A particularly vexing source of bias is that there are 2^226 possible shuffles but only 2^32 possible seeds, so the vast, vast majority of possible shuffles are never generated.","2021-06-09 17:47:40","","88656","CC BY-SA 4.0"
"120031458","64081701","0","I just stumbled over this question because Apple has, with iOS 15, added a new `reconfigureItems` method which seems to have the same problem as `reloadItems` where I had to change my model from struct to class in order to get it to work. The doc says that `reconfigureItems` should  be used to update the contents of existing cells without replacing them with new cells but the only difference I spotted so far is that `reloadItems` triggers `prepareForReuse` of the cell while `reconfigureItems` does not.","2021-06-09 17:52:44","","3940665","CC BY-SA 4.0"
"120090999","67913756","0","One thing I am noticing here is the `.userInitiated` priority, which is strangely high for expensive work. This could be influencing some of the scheduling decisions. Maybe you should do another `asyncDetached` with lower priority before doing expensive work?","2021-06-11 21:19:03","","3397903","CC BY-SA 4.0"
"120091070","67913756","0","Like the `detachedAsync` vs. `async`, the priority is irrelevant to the result I'm describing. Try it yourself.","2021-06-11 21:23:48","","341994","CC BY-SA 4.0"
"120091406","67913756","0","I agree that my code is running on the main thread like yours is in places such as these, but I haven't seen any of the main-thread blocking that you are describing as my work-loads are probably structured differently than yours (more suspension points?). I am wondering if once the main-thread is saturated like yours is, lower-priority work doesn't end up on the main-thread as often. Just a guess, which is why it isn't an answer.","2021-06-11 21:50:52","","3397903","CC BY-SA 4.0"
"121103062","68505026","0","In a grand scheme of things, memory models and optimization are seldom a good fit for each other. Vulnerabilities like Spectre and Meltdown can bear witness. :-)","2021-07-26 05:15:11","","2702398","CC BY-SA 4.0"
"121109213","68505026","0","Not sure if this is helpful, but you might be interested in [CppMem](http://svr-pes20-cppmem.cl.cam.ac.uk/cppmem/index.html).","2021-07-26 10:39:11","","20270","CC BY-SA 4.0"
"121383895","61122378","0","I am testing your command for listing bundle IDs. It does not work on my machine (macOS Big Sur Version 11.4). The directory `/System/Library/Speech/Voices/` is empty. It seems that the files are moved to `/System/Library/SpeechBase/Voices/`. However, the files for Siri are not found there (`grep` does not match anything).","2021-08-06 16:47:52","","142239","CC BY-SA 4.0"
"121384587","61122378","1","On my machine (macOS Big Sur Version 11.4), the voice identifiers for Siri could be found inside the file `/System/Library/PrivateFrameworks/SpeechObjects.framework/Versions/A/Resources/SpeechDataDefaults.plist`.","2021-08-06 17:27:17","","142239","CC BY-SA 4.0"
"121386089","61122378","0","That is curious, @SiuChingPong-AsukaKenji-: For me, the original command still works, as of macOS Big Sur 11.5.1","2021-08-06 18:50:16","","45375","CC BY-SA 4.0"
"121386651","61122378","0","Perhaps it is because mine is a clean install of macOS Big Sur. When I installed Big Sur, I wiped out all the things on my Mac. The fact that your command still works on your machine may be due to upgrading from a previous version of macOS. Those files are carried from the old one. By the way, I am curious whether my locations work on your machine too. 😉","2021-08-06 19:21:09","","142239","CC BY-SA 4.0"
"121387752","61122378","1","@SiuChingPong-AsukaKenji-: indeed, my machine is upgraded, but please note that your file - also present in earlier versions - is just a _catalog_ of _metadata_ about _downloadable_ voices, whereas my command lists only the _installed_ Siri voices. I've added a command to extract the bundle IDs of all _downloadable_ Siri voices too. (As an aside: `/System/Library/PrivateFrameworks/SpeechObjects.framework/Resources/SpeechDataDefaults.plist` is the better path to use (`/Versions/A` removed).","2021-08-06 20:29:09","","45375","CC BY-SA 4.0"
"121704481","68864640","4","Basically I'm wondering whether I've found a bug and looking for a sanity check before I report it.","2021-08-20 15:41:23","","341994","CC BY-SA 4.0"
"121705094","68864640","2","@Rob So your answer is that it is up to you (meaning me) to Don't Do That? What then of the assertion in the proposal that ""all cross-actor references can only involve types that conform to Sendable""?","2021-08-20 16:10:16","","341994","CC BY-SA 4.0"
"121705492","68864640","2","(1) No they're not. They're claiming that the compiler will catch me exactly _because_ Dog is not Sendable. (2) You have not explained what sense it makes that if the `dog` declaration is `var` we are forced to use `await` for access, but if the `dog` declaration is `let`, we are not. A constant reference to a nonSendable reference type is not more thread-safe than a `var` reference!","2021-08-20 16:30:49","","341994","CC BY-SA 4.0"
"121708335","68864640","2","OK, I went ahead and filed this as a bug.","2021-08-20 19:00:26","","341994","CC BY-SA 4.0"
"122156921","69116668","2","There seems to be some related discussion here: https://github.com/dotnet/csharplang/discussions/911","2021-09-09 10:40:42","","106159","CC BY-SA 4.0"
"122156984","69116668","0","I think this is worthy of a github issue. It seems strange to say the least and potentially an obscure design decision worthy of an authoritive explanation. Edit ^^","2021-09-09 10:43:11","","1612975","CC BY-SA 4.0"
"122157103","69116668","2","Honestly, **if** anyone could answer that I'd expected Marc to do :D","2021-09-09 10:47:27","","2528063","CC BY-SA 4.0"
"122157316","69116668","0","@GyörgyKőszeg that has been asserted but not demonstrated. It was certainly a perfectly valid expression a few lines above :) the fact that the Microsoft.Whatever example passes means nothing: that could *also* resolve to be a namespace rather than a type","2021-09-09 10:56:53","","23354","CC BY-SA 4.0"
"122157542","69116668","0","This specific issue is also [mentioned](https://github.com/dotnet/csharplang/discussions/911#discussioncomment-71972) on GitHub. A reply [here](https://github.com/dotnet/csharplang/discussions/911#discussioncomment-71973) says: it's not a valid expression syntactically (added before Marc's comment). Update: Maybe it will be fixed along with [this](https://github.com/dotnet/csharplang/discussions/702) proposal filed by Jon Skeet, which seems to be the restriction of the same expression syntax limitation. But I can't tell why `global::C` is valid though. Maybe add a comment to the GitHub issue.","2021-09-09 11:07:55","","5114784","CC BY-SA 4.0"
"123697932","69976189","0","I think this is ok. It will work if you [manually fill in `Any`](https://godbolt.org/z/q69d1YbPd), and it is equivalent to the parameter pack version.","2021-11-15 15:04:09","","11638718","CC BY-SA 4.0"
"123698054","69976189","0","So compiler bug (or feature not yet implemented) from gcc/msvc?","2021-11-15 15:08:45","","2684539","CC BY-SA 4.0"
"123698157","69976189","0","gcc/msvc's implementation of C++ new features has always been ahead of clang, so I suspect this is a compiler bug. But I am not a language lawyer, so this still requires a language lawyer to quote relevant wording :-D","2021-11-15 15:13:23","","11638718","CC BY-SA 4.0"
"123698363","69976189","0","In fact, you do not expand `Is` by mistake, [msvc/gcc will accept it](https://godbolt.org/z/M833hbWM4). I believe the answer to this question should be clear, but interestingly, clang crashed.","2021-11-15 15:20:52","","11638718","CC BY-SA 4.0"
"123699013","69976189","0","@康桓瑋 Maybe gcc/msvc tend to be ahead in terms of first releasing new features, but clang is generally the best of them when it comes to standard compliance in language-lawyer corner cases.","2021-11-15 15:44:08","","459640","CC BY-SA 4.0"
"130571486","69530502","0","It can be considered as a bad solution, but what if you show a popup dialog before actually asking for a permission to not to ""waste"" asking attempts?","2022-10-04 14:40:06","","3986289","CC BY-SA 4.0"
"130968549","67749284","0","Thanks. I was wondering, do you have a concrete answer for your question? As, I have a similar doubt as you - https://stackoverflow.com/questions/74177577/how-to-avoid-android-app-foregroundservicestartnotallowedexception-when-using-wo","2022-10-24 09:51:33","","72437","CC BY-SA 4.0"
"122157561","69116668","0","@GyörgyKőszeg I don't think that proposal of Jon Skeet's affects this?","2021-09-09 11:08:56","","1086121","CC BY-SA 4.0"
"122157594","69116668","0","@GyörgyKőszeg in terms of it being a valid `nameof_expression` - the real question is ""why is that rule like it is?"" - not ""why is the compiler following the rule?""; I've clarified with citations","2021-09-09 11:10:44","","23354","CC BY-SA 4.0"
"122157598","69116668","1","@canton7: [this](https://github.com/dotnet/csharplang/discussions/702#discussioncomment-69700) comment suggests that they are related. I cannot confirm it though.","2021-09-09 11:10:51","","5114784","CC BY-SA 4.0"
"122157850","69116668","0","@MatthewWatson thanks; opined :)","2021-09-09 11:21:32","","23354","CC BY-SA 4.0"
"122158744","69116668","0","also linking for context: https://github.com/dotnet/roslyn/issues/1590","2021-09-09 11:57:17","","23354","CC BY-SA 4.0"
"123010212","63421086","0","`webdrivermanager` and `webdriver-manager` - are different libraries. Your code is from `webdriver-manager` library, which has two aliases: `webdriver_manager` & `webdriver-manager` and could be installed by any of them.","2021-10-16 08:02:11","","8091236","CC BY-SA 4.0"
"123612490","69530502","0","@karticchaudhary: To be honest, I have not circled back to this. It is on my to-do list.","2021-11-11 12:31:39","","115145","CC BY-SA 4.0"
"123709920","69976189","0","@Jarod42: Sorry, I saw `… Ls` and overlooked the pack *expansion* that was the whole point of that part.","2021-11-16 01:43:03","","8586227","CC BY-SA 4.0"
"128296181","61531317","0","Also, you can check your target directory with all your compiled classes. Sometimes, IDE don't want to compile these files, and so, you can't get them at runtime.","2022-06-15 11:09:03","","13636383","CC BY-SA 4.0"
"128296220","61531317","0","@psyopus That is discussed under “troubleshooting” in the answer.","2022-06-15 11:11:02","","2189127","CC BY-SA 4.0"
"130428881","62969917","0","yes it is working in case <query. tag in manifest classpath(""com.android.tools.build:gradle:3.5.3"")

Current setting:

classpath(""com.android.tools.build:gradle:3.5.4"")","2022-09-27 10:37:31","","12818975","CC BY-SA 4.0"
"129889629","61151278","0","On github: https://github.com/dotnet/csharplang/issues/2235","2022-08-31 10:10:05","","661933","CC BY-SA 4.0"